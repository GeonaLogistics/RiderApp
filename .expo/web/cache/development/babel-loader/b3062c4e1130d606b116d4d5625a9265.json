{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kawab\\\\Desktop\\\\expresslog\\\\src\\\\Screen\\\\findrider\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport container from \"../../Styles/Container/style\";\nvar width = Dimensions.get(\"window\").width;\nvar height = Dimensions.get(\"window\").height;\nimport Color from \"../../Config/Color\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport TextIcon from \"../../Component/TextIcon\";\nimport Button from \"../../Component/Button/index\";\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\nimport RNPickerSelect from 'react-native-picker-select';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { Picker } from '@react-native-picker/picker';\nimport Spinner from 'react-native-loading-spinner-overlay';\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n\n    _this.startTimer = function () {\n      _this.clockCall = setInterval(function () {\n        _this.decrementClock();\n      }, 1000);\n    };\n\n    _this.decrementClock = function () {\n      if (_this.state.timer === 1) {\n        clearInterval(_this.clockCall);\n      } else {\n        _this.getMovies();\n      }\n\n      _this.setState(function (prevstate) {\n        return {\n          timer: prevstate.timer - 1\n        };\n      });\n    };\n\n    _this.getMovies = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              trackcode = _this.props.navigation.state.params.trackcode;\n              fetch('https://expressalllogistics.com/logistics/checkdriver.php', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  trackcodes: trackcode\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (responseJson) {\n                var user_id = responseJson.Tripcode;\n                var driversmobile = responseJson.driversmobile;\n\n                if (user_id === 1) {\n                  alert(\"Order Received\");\n                  Vibration.vibrate(1500);\n\n                  _this.setState({\n                    drivermobile: driversmobile,\n                    textt: \"Rider Accepted\"\n                  });\n\n                  clearInterval(_this.clockCall);\n                } else if (user_id === 2) {\n                  _this.setState({\n                    textt: \"Rider Didnt Accepted\"\n                  });\n\n                  _this.setState({\n                    textt: \"Awaiting for Admin to assign a rider\"\n                  });\n\n                  _this.startTimer();\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.processAddress = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              value = _this.props.navigation.state.params.value;\n              trackcode = _this.props.navigation.state.params.trackcode;\n\n              _this.setState({\n                values: value\n              });\n\n              if (value === 1) {\n                _this.setState({\n                  textt: \"Rider Found, Awaiting for Rider to accept\",\n                  spinner: false\n                });\n\n                _this.startTimer();\n              } else {\n                _this.setState({\n                  textt: \"Finding nearest Rider\"\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var timelefts = 10;\n    var _value = \"\";\n    var _trackcode = \"\";\n    var dlats = \"\";\n    var dlongs = \"\";\n    var daddresss = \"\";\n    var pstreets = \"\";\n    _this.state = {\n      values: \"\",\n      textt: \"\",\n      timeleft: \"\",\n      timer: 40,\n      drivermobile: \"\",\n      spinner: true,\n      orders: []\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.clockCall);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this.processAddress();\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: [container.container],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }\n      }), React.createElement(Spinner, {\n        visible: this.state.spinner,\n        textContent: 'Loading...',\n        overlayColor: 'rgba(0, 0, 0, 0.8)',\n        textStyle: {\n          color: '#FFF'\n        },\n        cancelable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          width: width,\n          backgroundColor: '#000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          marginHorizontal: 15,\n          marginTop: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.goBack();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-arrow-back\",\n        size: 25,\n        style: [{\n          alignSelf: \"flex-start\",\n          color: \"#fff\"\n        }, this.props.iconStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.75,\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 26,\n          fontFamily: \"uber-b\",\n          color: Color.white,\n          marginTop: 10,\n          marginBottom: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }\n      }, \"Find Rider\"))))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 9\n        }\n      }), React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.centralize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.centralize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }\n      }, this.state.textt)), React.createElement(View, {\n        style: styles.centralized,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.centralized,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 44\n        }\n      }, \" \", this.state.timer === 0 ? 'Rider didnt accept!' : this.state.timer)), React.createElement(View, {\n        style: styles.regForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }\n      })), React.createElement(Button, {\n        Text: \"Next\",\n        viewStyle: {\n          backgroundColor: Color.black,\n          color: '#ffffff',\n          borderRadius: 0,\n          borderColor: Color.white,\n          marginTop: 10,\n          marginBottom: 0,\n          marginHorizontal: 0\n        },\n        textStyle: {\n          color: Color.steel\n        },\n        onPress: function onPress() {\n          return _this2.processColor();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport { index as default };\nvar styles = StyleSheet.create({\n  regForm: {\n    padding: 20\n  },\n  textinput: {\n    marginBottom: 30,\n    color: '#000000',\n    borderColor: '#000000',\n    borderWidth: 1,\n    padding: 10,\n    fontSize: 12\n  },\n  centralize: {\n    alignItems: 'center',\n    fontWeight: 'bold',\n    fontSize: 15,\n    marginVertical: 10\n  },\n  centralized: {\n    alignItems: 'center',\n    fontWeight: 'bold',\n    fontSize: 30,\n    marginVertical: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/kawab/Desktop/expresslog/src/Screen/findrider/index.js"],"names":["React","Component","container","width","Dimensions","get","height","Color","Icon","TextIcon","Button","RadioForm","RadioButton","RadioButtonInput","RadioButtonLabel","RNPickerSelect","AsyncStorage","Picker","Spinner","index","props","startTimer","clockCall","setInterval","decrementClock","state","timer","clearInterval","getMovies","setState","prevstate","trackcode","navigation","params","fetch","method","headers","body","JSON","stringify","trackcodes","then","response","json","responseJson","user_id","Tripcode","driversmobile","alert","Vibration","vibrate","drivermobile","textt","processAddress","value","values","spinner","timelefts","dlats","dlongs","daddresss","pstreets","timeleft","orders","color","backgroundColor","marginHorizontal","marginTop","goBack","alignSelf","iconStyle","flexDirection","flex","justifyContent","fontSize","fontFamily","white","marginBottom","styles","centralize","centralized","regForm","black","borderRadius","borderColor","steel","processColor","StyleSheet","create","padding","textinput","borderWidth","alignItems","fontWeight","marginVertical"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  ImageBackground,\n  Dimensions,\n  Image,\n  TextInput,\n  KeyboardAvoidingView,\n  TouchableOpacity,\n  ScrollView,\n  StatusBar,\n  StyleSheet,\n  processColor\n} from \"react-native\";\nimport container from \"../../Styles/Container/style\";\nlet width = Dimensions.get(\"window\").width;\nlet height = Dimensions.get(\"window\").height;\nimport Color from \"../../Config/Color\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\n//import style from \"./style\";\nimport TextIcon from \"../../Component/TextIcon\";\nimport Button from \"../../Component/Button/index\";\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\nimport RNPickerSelect from 'react-native-picker-select';\nimport AsyncStorage from '@react-native-community/async-storage'\nimport { Picker } from '@react-native-picker/picker';\nimport Spinner from 'react-native-loading-spinner-overlay';\n\n\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props)\n    var timelefts = 10;\n\n\n    var value = \"\"\n    var trackcode = \"\"\n    var dlats = \"\"\n    var dlongs = \"\"\n    var daddresss = \"\"\n    var pstreets = \"\"\n\n    this.state = {\n      values: \"\",\n      textt: \"\",\n      timeleft: \"\",\n      timer: 40,\n      drivermobile: \"\",\n\n      spinner: true,\n\n      orders: []\n\n    };\n  }\n\n\n\n  startTimer = () => {\n    this.clockCall = setInterval(() => {\n      this.decrementClock();\n    }, 1000);\n  }\n\n  decrementClock = () => {\n    if (this.state.timer === 1) { clearInterval(this.clockCall) }\n    else { this.getMovies() }\n    this.setState((prevstate) => ({ timer: prevstate.timer - 1 }));\n  };\n\n  getMovies = async () => {\n\n    trackcode = this.props.navigation.state.params.trackcode\n    /*\n        try {\n          var userId = (await AsyncStorage.getItem(\"@setMobile\")) || \"none\";\n        }\n        catch (error) {\n          // Error saving data\n          console.log(\"Error saving Data\")\n        }\n    */\n\n\n\n    fetch('https://expressalllogistics.com/logistics/checkdriver.php', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n\n        trackcodes: trackcode\n\n      })\n\n    }).then((response) => response.json())\n      .then((responseJson) => {\n\n        var user_id = responseJson.Tripcode\n        var driversmobile = responseJson.driversmobile\n\n\n\n        if (user_id === 1) {\n\n\n\n          alert(\"Order Received\")\n          Vibration.vibrate(1500)\n          this.setState({ drivermobile: driversmobile, textt: \"Rider Accepted\" })\n\n          clearInterval(this.clockCall);\n\n\n\n        }\n        else if (user_id === 2) {\n          this.setState({ textt: \"Rider Didnt Accepted\" })\n\n          this.setState({ textt: \"Awaiting for Admin to assign a rider\" })\n\n          this.startTimer()\n        }\n      });\n\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clockCall);\n  }\n\n\n\n\n  async componentDidMount() {\n\n\n\n\n    this.processAddress()\n\n\n    /*\n    \n        //console.log(\"hello\")\n    \n        fetch('https://expressalllogistics.com/logistics/states.php', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n    \n            mobile: this.state.tmobile,\n            password: this.state.tpassword\n    \n          })\n    \n        }).then((response) => response.json())\n          .then((responseJson) => {\n    \n            this.setState({\n              spinner: false\n            }, () => {\n    \n              console.log(responseJson)\n              this.setState({ orders: responseJson })\n    \n            })\n    \n    \n    \n          })\n    \n    \n    */\n\n\n  }\n\n\n\n\n\n  processAddress = async () => {\n\n    value = this.props.navigation.state.params.value\n    trackcode = this.props.navigation.state.params.trackcode\n\n    this.setState({ values: value })\n\n    if (value === 1) {\n      this.setState({ textt: \"Rider Found, Awaiting for Rider to accept\", spinner: false })\n\n      this.startTimer()\n\n\n\n\n    }\n    else {\n      this.setState({ textt: \"Finding nearest Rider\" })\n    }\n\n  }\n\n\n\n\n  render() {\n\n\n\n\n\n\n\n\n\n    return (\n      <View style={[container.container]}>\n        <StatusBar\n          barStyle=\"light-content\"\n        />\n        <Spinner\n          visible={this.state.spinner}\n          textContent={'Loading...'}\n          overlayColor={'rgba(0, 0, 0, 0.8)'}\n          textStyle={{ color: '#FFF' }}\n          cancelable={false}\n\n        />\n        <View style={{ width: width, backgroundColor: '#000' }}>\n          <View\n            style={{\n              marginHorizontal: 15,\n              marginTop: 40,\n            }}\n          >\n            <TouchableOpacity\n              onPress={() => this.props.navigation.goBack()}\n            >\n              <Icon\n                name=\"ios-arrow-back\"\n                size={25}\n                style={[\n                  {\n                    alignSelf: \"flex-start\",\n                    color: \"#fff\"\n                    //marginTop:40\n                  },\n                  this.props.iconStyle\n                ]}\n              />\n            </TouchableOpacity>\n            <View style={{ flexDirection: \"row\", }}>\n              <View style={{ flex: 0.75, justifyContent: \"center\" }}>\n                <Text\n                  style={{\n                    fontSize: 26,\n                    fontFamily: \"uber-b\",\n                    color: Color.white,\n                    marginTop: 10,\n                    marginBottom: 25\n                  }}\n                >\n                  Find Rider\n                  </Text>\n              </View>\n              {/* <View style={[style.imageProfileView, { flex: 0.25 }]}>\n                  <Image\n                    source={require(\"../../Image/Pic.png\")}\n                    style={style.imageProfile}\n                  />\n                </View> */}\n            </View>\n          </View>\n        </View>\n        <View />\n\n\n        <ScrollView>\n          <View style={styles.centralize}>\n            <Text style={styles.centralize}>{this.state.textt}</Text></View>\n\n          <View style={styles.centralized}><Text style={styles.centralized}> {this.state.timer === 0 ? 'Rider didnt accept!' : this.state.timer}</Text></View>\n          <View style={styles.regForm}>\n\n\n\n\n\n          </View>\n        </ScrollView>\n        <Button\n          Text=\"Next\"\n          viewStyle={{\n            backgroundColor: Color.black,\n            color: '#ffffff',\n            borderRadius: 0,\n            borderColor: Color.white,\n            marginTop: 10,\n            marginBottom: 0,\n            marginHorizontal: 0\n          }}\n          textStyle={{ color: Color.steel }}\n          onPress={() => this.processColor()}\n        />\n\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  regForm: {\n    padding: 20\n  },\n  textinput: {\n\n\n    marginBottom: 30,\n    color: '#000000',\n    borderColor: '#000000',\n    borderWidth: 1,\n    padding: 10,\n    fontSize: 12\n  },\n  centralize: {\n    alignItems: 'center',\n    fontWeight: 'bold',\n    fontSize: 15,\n    marginVertical: 10\n\n  },\n\n  centralized: {\n    alignItems: 'center',\n    fontWeight: 'bold',\n    fontSize: 30,\n    marginVertical: 10\n\n  }\n});\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}