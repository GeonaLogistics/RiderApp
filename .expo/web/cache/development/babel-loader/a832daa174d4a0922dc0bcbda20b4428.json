{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kawab\\\\Desktop\\\\expresslog\\\\src\\\\Screen\\\\PickUp\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\nimport MapView, { Marker } from 'react-native-maps';\nvar width = Dimensions.get(\"window\").width;\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Back from \"../../Component/Back/index\";\nimport container from \"../../Styles/Container/style\";\nimport style from \"./style\";\nimport Button from \"../../Component/Button/index\";\nimport PolylineDirection from '@react-native-maps/polyline-direction';\nimport { withOrientation } from \"react-navigation\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { getDistance, getPreciseDistance } from 'geolib';\nimport Spinner from 'react-native-loading-spinner-overlay';\nvar plats = 0,\n    plongs = 0;\nvar daddress = null;\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n\n    _this._loadData = function () {\n      var pplat = _this.props.navigation.state.params.platitude;\n      var pplongs = _this.props.navigation.state.params.plongitude;\n      var pstreet = _this.props.navigation.state.params.pstreet;\n      plats = _this.state.plat ? _this.state.plat : pplat;\n      plongs = _this.state.plong ? _this.state.plong : pplongs;\n      daddress = _this.state.address ? _this.state.address : pstreet;\n\n      _this.setState({\n        spinner: false,\n        origin: {\n          latitude: _this.state.plat ? _this.state.plat : pplat,\n          longitude: _this.state.plong ? _this.state.plong : pplongs,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421\n        }\n      }, function () {});\n    };\n\n    _this._storeData = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@PickUpAddress', _this.state.address));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"Error saving Data\");\n\n            case 8:\n              _context.prev = 8;\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@PickUpState', _this.state.stateName));\n\n            case 11:\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t1 = _context[\"catch\"](8);\n              console.log(\"Error saving Data\");\n\n            case 16:\n              _context.prev = 16;\n              _context.next = 19;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@CityName', _this.state.city));\n\n            case 19:\n              _context.next = 24;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t2 = _context[\"catch\"](16);\n              console.log(\"Error saving Data\");\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5], [8, 13], [16, 21]], Promise);\n    };\n\n    _this.state = {\n      address: null,\n      plat: 0,\n      plong: 0,\n      lat: 0,\n      lng: 0,\n      city: null,\n      pickupCity: null,\n      pickupState: null,\n      stateName: null,\n      spinner: true,\n      region: {\n        latitude: 37.78825,\n        longitude: -122.4324,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      }\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadData();\n    }\n  }, {\n    key: \"getAdd\",\n    value: function getAdd(datas) {\n      console.log(\"add\", datas);\n      this.setState({\n        address: datas.formatted_address,\n        plat: datas.geometry.location.lat,\n        plong: datas.geometry.location.lng,\n        stateName: datas.address_components.filter(function (x) {\n          return x.types.filter(function (t) {\n            return t == 'administrative_area_level_1';\n          }).length > 0;\n        })[0].long_name,\n        city: datas.address_components[1].long_name\n      }, function () {});\n\n      this._storeData();\n\n      this._loadData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: container.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"dark-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }), React.createElement(Spinner, {\n        visible: this.state.spinner,\n        textContent: 'Loading...',\n        overlayColor: 'rgba(0, 0, 0, 0.8)',\n        textStyle: {\n          color: '#FFF'\n        },\n        cancelable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }), React.createElement(MapView, {\n        provider: MapView.PROVIDER_GOOGLE,\n        style: {\n          flex: 1\n        },\n        zoomEnabled: true,\n        initialRegion: this.state.origin,\n        onMapReady: this.onMapReady,\n        onRegionChangeComplete: this.onRegionChange,\n        region: this.state.origin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      }, React.createElement(Marker, {\n        coordinate: {\n          latitude: plats,\n          longitude: plongs\n        },\n        title: \"Pick up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          backgroundColor: '#fff',\n          fontWeight: 'bold',\n          padding: 7\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }\n      }, \"Pick up\"), React.createElement(Image, {\n        source: require(\"../../Image/pin2.png\"),\n        style: {\n          width: 50,\n          height: 50,\n          alignSelf: \"center\",\n          resizeMode: \"contain\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }\n      }))), React.createElement(GooglePlacesAutocomplete, {\n        placeholder: \"Enter New Pick up Location\",\n        placeholderTextColor: \"#333\",\n        onPress: function onPress(datas, details) {\n          console.log(datas, details);\n          var datas = details;\n\n          _this2.getAdd(datas);\n\n          moveToUserLocation: true;\n        },\n        query: {\n          key: \"AIzaSyC7bi_TnkSCakWUI0pjTf6y_Ho3Pt2q4E0\",\n          language: \"en\"\n        },\n        textInputProps: {\n          autoCapitalize: \"none\",\n          autoCorrect: false\n        },\n        fetchDetails: true,\n        enablePoweredByContainer: false,\n        styles: {\n          container: {\n            position: \"absolute\",\n            top: Platform.select({\n              ios: 60,\n              android: 40\n            }),\n            width: \"100%\"\n          },\n          textInputContainer: {\n            flex: 1,\n            backgroundColor: \"transparent\",\n            height: 54,\n            marginHorizontal: 20,\n            borderTopWidth: 0,\n            borderBottomWidth: 0\n          },\n          textInput: {\n            height: 54,\n            margin: 0,\n            borderRadius: 0,\n            paddingTop: 0,\n            paddingBottom: 0,\n            paddingLeft: 50,\n            paddingRight: 20,\n            marginTop: 0,\n            marginLeft: 0,\n            marginRight: 0,\n            elevation: 5,\n            shadowColor: \"#000\",\n            shadowOpacity: 0.1,\n            shadowOffset: {\n              x: 0,\n              y: 0\n            },\n            shadowRadius: 15,\n            borderWidth: 1,\n            borderColor: \"#ddd\",\n            fontSize: 18\n          },\n          listView: {\n            borderWidth: 1,\n            borderColor: \"#ddd\",\n            backgroundColor: \"#fff\",\n            marginHorizontal: 20,\n            elevation: 5,\n            shadowColor: \"#000\",\n            shadowOpacity: 0.1,\n            shadowOffset: {\n              x: 0,\n              y: 0\n            },\n            shadowRadius: 15,\n            marginTop: 10\n          },\n          description: {\n            fontSize: 16\n          },\n          row: {\n            padding: 20,\n            height: 65\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      }), React.createElement(Back, {\n        onPress: function onPress() {\n          return _this2.props.navigation.goBack();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: style.subContainerView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('HomeLetsGo', {\n            platitude: plats,\n            plongitude: plongs\n          });\n        },\n        Text: \"Set Destination Location\",\n        viewStyle: {\n          margin: 0,\n          borderRadius: 0,\n          width: width\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport { index as default };","map":{"version":3,"sources":["C:/Users/kawab/Desktop/expresslog/src/Screen/PickUp/index.js"],"names":["React","Component","GooglePlacesAutocomplete","MapView","Marker","width","Dimensions","get","Back","container","style","Button","PolylineDirection","withOrientation","AsyncStorage","getDistance","getPreciseDistance","Spinner","plats","plongs","daddress","index","props","_loadData","pplat","navigation","state","params","platitude","pplongs","plongitude","pstreet","plat","plong","address","setState","spinner","origin","latitude","longitude","latitudeDelta","longitudeDelta","_storeData","setItem","console","log","stateName","city","lat","lng","pickupCity","pickupState","region","datas","formatted_address","geometry","location","address_components","filter","x","types","t","length","long_name","color","PROVIDER_GOOGLE","flex","onMapReady","onRegionChange","backgroundColor","fontWeight","padding","require","height","alignSelf","resizeMode","details","getAdd","moveToUserLocation","key","language","autoCapitalize","autoCorrect","position","top","Platform","select","ios","android","textInputContainer","marginHorizontal","borderTopWidth","borderBottomWidth","textInput","margin","borderRadius","paddingTop","paddingBottom","paddingLeft","paddingRight","marginTop","marginLeft","marginRight","elevation","shadowColor","shadowOpacity","shadowOffset","y","shadowRadius","borderWidth","borderColor","fontSize","listView","description","row","goBack","subContainerView","navigate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\r\n\r\nimport MapView, { Marker } from 'react-native-maps';\r\nlet width = Dimensions.get(\"window\").width;\r\nimport {\r\n    Image,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    StatusBar,\r\n    Dimensions,\r\n    KeyboardAvoidingView,\r\n    Platform\r\n} from \"react-native\";\r\nimport Back from \"../../Component/Back/index\";\r\nimport container from \"../../Styles/Container/style\";\r\nimport style from \"./style\";\r\nimport Button from \"../../Component/Button/index\";\r\nimport PolylineDirection from '@react-native-maps/polyline-direction';\r\nimport { withOrientation } from \"react-navigation\";\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport { getDistance, getPreciseDistance } from 'geolib';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\n\r\n\r\nvar plats = 0, plongs = 0\r\n\r\nvar daddress = null\r\n\r\n// import { Container } from './styles';\r\nexport default class index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            address: null,\r\n            plat: 0,\r\n            plong: 0,\r\n            lat: 0,\r\n            lng: 0,\r\n            city: null,\r\n            pickupCity: null,\r\n            pickupState: null,\r\n            stateName: null,\r\n            spinner: true,\r\n\r\n            region: {\r\n                latitude: 37.78825,\r\n                longitude: -122.4324,\r\n                latitudeDelta: 0.0922,\r\n                longitudeDelta: 0.0421\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this._loadData();\r\n\r\n    }\r\n\r\n    getAdd(datas) {\r\n        console.log(\"add\", datas);\r\n\r\n\r\n\r\n        this.setState({\r\n            address: datas.formatted_address, // selected address\r\n            plat: datas.geometry.location.lat,//  selected coordinates latitude\r\n            plong: datas.geometry.location.lng, //  selected coordinates longitute\r\n            // city: data.address_components.filter(x => x.types.filter(t => t == 'administrative_area_level_1').length > 0)[0].short_name\r\n            stateName: datas.address_components.filter(x => x.types.filter(t => t == 'administrative_area_level_1').length > 0)[0].long_name,\r\n            city: datas.address_components[1].long_name,\r\n        }, () => {\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        this._storeData()\r\n\r\n        this._loadData()\r\n\r\n\r\n    }\r\n\r\n\r\n    _loadData = () => {\r\n\r\n        const pplat = this.props.navigation.state.params.platitude\r\n        const pplongs = this.props.navigation.state.params.plongitude\r\n        const pstreet = this.props.navigation.state.params.pstreet\r\n\r\n\r\n        plats = this.state.plat ? this.state.plat : pplat\r\n        plongs = this.state.plong ? this.state.plong : pplongs\r\n\r\n        daddress = this.state.address ? this.state.address : pstreet\r\n\r\n\r\n\r\n        // const origin = { latitude: plats, longitude: plongs };\r\n        //const destination = { latitude: dlat, longitude: dlong };\r\n        /*\r\n                const origin = {\r\n                    latitude: this.state.plat ? this.state.plat : pplat, longitude: this.state.plong ? this.state.plong : pplongs, latitudeDelta: 0.0922,\r\n                    longitudeDelta: 0.0421\r\n                };\r\n        */\r\n\r\n        this.setState({\r\n            spinner: false,\r\n            origin: {\r\n                latitude: this.state.plat ? this.state.plat : pplat,\r\n                longitude: this.state.plong ? this.state.plong : pplongs,\r\n                latitudeDelta: 0.0922,\r\n                longitudeDelta: 0.0421\r\n            }\r\n\r\n        }, () => {\r\n\r\n        })\r\n    }\r\n\r\n\r\n    _storeData = async () => {\r\n        try {\r\n            await AsyncStorage.setItem(\r\n                '@PickUpAddress',\r\n                this.state.address\r\n            );\r\n\r\n\r\n        }\r\n        catch (error) {\r\n            // Error saving data\r\n            console.log(\"Error saving Data\")\r\n        }\r\n\r\n        try {\r\n            await AsyncStorage.setItem(\r\n                '@PickUpState',\r\n                this.state.stateName\r\n            );\r\n\r\n\r\n        }\r\n        catch (error) {\r\n            // Error saving data\r\n            console.log(\"Error saving Data\")\r\n        }\r\n\r\n\r\n\r\n        try {\r\n            await AsyncStorage.setItem(\r\n                '@CityName',\r\n                this.state.city\r\n            );\r\n\r\n\r\n        }\r\n        catch (error) {\r\n            // Error saving data\r\n            console.log(\"Error saving Data\")\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n            <View style={container.container}>\r\n                <StatusBar barStyle=\"dark-content\" />\r\n                <Spinner\r\n                    visible={this.state.spinner}\r\n                    textContent={'Loading...'}\r\n                    overlayColor={'rgba(0, 0, 0, 0.8)'}\r\n                    textStyle={{ color: '#FFF' }}\r\n                    cancelable={false}\r\n\r\n                />\r\n                <MapView\r\n\r\n                    provider={MapView.PROVIDER_GOOGLE}\r\n                    style={{ flex: 1 }}\r\n                    zoomEnabled={true}\r\n                    initialRegion={this.state.origin}\r\n                    onMapReady={this.onMapReady}\r\n                    onRegionChangeComplete={this.onRegionChange}\r\n                    region={this.state.origin}\r\n                >\r\n\r\n\r\n                    <Marker\r\n                        coordinate={{\r\n                            latitude: plats,\r\n                            longitude: plongs\r\n                        }}\r\n                        title=\"Pick up\"\r\n                    >\r\n                        <Text style={{ backgroundColor: '#fff', fontWeight: 'bold', padding: 7 }}>Pick up</Text>\r\n                        <Image\r\n                            source={require(\"../../Image/pin2.png\")}\r\n                            style={{\r\n                                width: 50,\r\n                                height: 50,\r\n                                alignSelf: \"center\",\r\n                                resizeMode: \"contain\"\r\n                            }}\r\n                        />\r\n                    </Marker>\r\n\r\n\r\n                </MapView>\r\n\r\n\r\n\r\n\r\n\r\n                <GooglePlacesAutocomplete\r\n                    placeholder=\"Enter New Pick up Location\"\r\n                    placeholderTextColor=\"#333\"\r\n                    onPress={(datas, details) => {\r\n                        console.log(datas, details);\r\n\r\n                        var datas = details;\r\n                        this.getAdd(datas);\r\n                        moveToUserLocation: true\r\n                    }}\r\n                    query={{\r\n                        key: \"AIzaSyC7bi_TnkSCakWUI0pjTf6y_Ho3Pt2q4E0\",\r\n                        language: \"en\"\r\n                    }}\r\n                    textInputProps={{\r\n                        autoCapitalize: \"none\",\r\n                        autoCorrect: false\r\n                    }}\r\n                    fetchDetails={true}\r\n                    enablePoweredByContainer={false}\r\n                    styles={{\r\n                        container: {\r\n                            position: \"absolute\",\r\n                            top: Platform.select({ ios: 60, android: 40 }),\r\n                            width: \"100%\"\r\n                        },\r\n                        textInputContainer: {\r\n                            flex: 1,\r\n                            backgroundColor: \"transparent\",\r\n                            height: 54,\r\n                            marginHorizontal: 20,\r\n                            borderTopWidth: 0,\r\n                            borderBottomWidth: 0,\r\n\r\n                        },\r\n                        textInput: {\r\n                            height: 54,\r\n                            margin: 0,\r\n                            borderRadius: 0,\r\n                            paddingTop: 0,\r\n                            paddingBottom: 0,\r\n                            paddingLeft: 50,\r\n                            paddingRight: 20,\r\n                            marginTop: 0,\r\n                            marginLeft: 0,\r\n                            marginRight: 0,\r\n                            elevation: 5,\r\n                            shadowColor: \"#000\",\r\n                            shadowOpacity: 0.1,\r\n                            shadowOffset: { x: 0, y: 0 },\r\n                            shadowRadius: 15,\r\n                            borderWidth: 1,\r\n                            borderColor: \"#ddd\",\r\n                            fontSize: 18,\r\n\r\n                        },\r\n                        listView: {\r\n                            borderWidth: 1,\r\n                            borderColor: \"#ddd\",\r\n                            backgroundColor: \"#fff\",\r\n                            marginHorizontal: 20,\r\n                            elevation: 5,\r\n                            shadowColor: \"#000\",\r\n                            shadowOpacity: 0.1,\r\n                            shadowOffset: { x: 0, y: 0 },\r\n                            shadowRadius: 15,\r\n                            marginTop: 10\r\n                        },\r\n                        description: {\r\n                            fontSize: 16\r\n                        },\r\n                        row: {\r\n                            padding: 20,\r\n                            height: 65\r\n                        }\r\n                    }}\r\n                />\r\n\r\n                <Back onPress={() => this.props.navigation.goBack()} />\r\n                <View style={style.subContainerView}>\r\n                    <Button\r\n                        onPress={() => this.props.navigation.navigate('HomeLetsGo', { platitude: plats, plongitude: plongs })}\r\n\r\n                        Text=\"Set Destination Location\"\r\n                        viewStyle={{ margin: 0, borderRadius: 0, width: width }}\r\n                    />\r\n                </View>\r\n\r\n            </View>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}