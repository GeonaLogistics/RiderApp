{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kawab\\\\Desktop\\\\expresslog\\\\node_modules\\\\react-native-modal\\\\src\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PropTypes from \"prop-types\";\nimport { View, initializeRegistryWithDefinitions, registerAnimation, createAnimation } from \"react-native-animatable\";\nimport * as ANIMATION_DEFINITIONS from \"./animations\";\nimport styles from \"./index.style.js\";\ninitializeRegistryWithDefinitions(ANIMATION_DEFINITIONS);\n\nvar makeAnimation = function makeAnimation(name, obj) {\n  registerAnimation(name, createAnimation(obj));\n};\n\nvar isObject = function isObject(obj) {\n  return obj !== null && typeof obj === \"object\";\n};\n\nvar ReactNativeModal = function (_Component) {\n  _inherits(ReactNativeModal, _Component);\n\n  var _super = _createSuper(ReactNativeModal);\n\n  function ReactNativeModal(_props) {\n    var _this;\n\n    _classCallCheck(this, ReactNativeModal);\n\n    _this = _super.call(this, _props);\n    _this.state = {\n      showContent: true,\n      isVisible: false,\n      deviceWidth: Dimensions.get(\"window\").width,\n      deviceHeight: Dimensions.get(\"window\").height,\n      isSwipeable: _this.props.swipeDirection ? true : false,\n      pan: null\n    };\n    _this.transitionLock = null;\n    _this.inSwipeClosingState = false;\n\n    _this.buildPanResponder = function () {\n      var animEvt = null;\n\n      if (_this.props.swipeDirection === \"right\" || _this.props.swipeDirection === \"left\") {\n        animEvt = Animated.event([null, {\n          dx: _this.state.pan.x\n        }]);\n      } else {\n        animEvt = Animated.event([null, {\n          dy: _this.state.pan.y\n        }]);\n      }\n\n      _this.panResponder = PanResponder.create({\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n          return Math.abs(gestureState.dx) >= 4 || Math.abs(gestureState.dy) >= 4;\n        },\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n          if (_this.props.scrollTo) {\n            if (_this.props.scrollOffset > 0) {\n              return false;\n            }\n          }\n\n          return true;\n        },\n        onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n          var deviceWidth = _this.props.deviceWidth || _this.state.deviceWidth;\n\n          var accDistance = _this.getAccDistancePerDirection(gestureState);\n\n          var newOpacityFactor = 1 - accDistance / deviceWidth;\n\n          if (_this.isSwipeDirectionAllowed(gestureState)) {\n            _this.backdropRef && _this.backdropRef.transitionTo({\n              opacity: _this.props.backdropOpacity * newOpacityFactor\n            });\n            animEvt(evt, gestureState);\n          } else {\n            if (_this.props.scrollTo) {\n              var offsetY = -gestureState.dy;\n\n              if (offsetY > _this.props.scrollOffsetMax) {\n                offsetY -= (offsetY - _this.props.scrollOffsetMax) / 2;\n              }\n\n              _this.props.scrollTo({\n                y: offsetY,\n                animated: false\n              });\n            }\n          }\n        },\n        onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n          var accDistance = _this.getAccDistancePerDirection(gestureState);\n\n          if (accDistance > _this.props.swipeThreshold) {\n            if (_this.props.onSwipe) {\n              _this.inSwipeClosingState = true;\n\n              _this.props.onSwipe();\n\n              return;\n            }\n          }\n\n          if (_this.backdropRef) {\n            _this.backdropRef.transitionTo({\n              opacity: _this.props.backdropOpacity\n            }, _this.props.backdropTransitionInTiming);\n          }\n\n          Animated.spring(_this.state.pan, {\n            toValue: {\n              x: 0,\n              y: 0\n            },\n            bounciness: 0\n          }).start();\n\n          if (_this.props.scrollOffset > _this.props.scrollOffsetMax) {\n            _this.props.scrollTo({\n              y: _this.props.scrollOffsetMax,\n              animated: true\n            });\n          }\n        }\n      });\n    };\n\n    _this.getAccDistancePerDirection = function (gestureState) {\n      switch (_this.props.swipeDirection) {\n        case \"up\":\n          return -gestureState.dy;\n\n        case \"down\":\n          return gestureState.dy;\n\n        case \"right\":\n          return gestureState.dx;\n\n        case \"left\":\n          return -gestureState.dx;\n\n        default:\n          return 0;\n      }\n    };\n\n    _this.isSwipeDirectionAllowed = function (_ref) {\n      var dy = _ref.dy,\n          dx = _ref.dx;\n      var draggedDown = dy > 0;\n      var draggedUp = dy < 0;\n      var draggedLeft = dx < 0;\n      var draggedRight = dx > 0;\n\n      if (_this.props.swipeDirection === \"up\" && draggedUp) {\n        return true;\n      } else if (_this.props.swipeDirection === \"down\" && draggedDown) {\n        return true;\n      } else if (_this.props.swipeDirection === \"right\" && draggedRight) {\n        return true;\n      } else if (_this.props.swipeDirection === \"left\" && draggedLeft) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.buildAnimations = function (props) {\n      var animationIn = props.animationIn;\n      var animationOut = props.animationOut;\n\n      if (isObject(animationIn)) {\n        var animationName = JSON.stringify(animationIn);\n        makeAnimation(animationName, animationIn);\n        animationIn = animationName;\n      }\n\n      if (isObject(animationOut)) {\n        var _animationName = JSON.stringify(animationOut);\n\n        makeAnimation(_animationName, animationOut);\n        animationOut = _animationName;\n      }\n\n      _this.animationIn = animationIn;\n      _this.animationOut = animationOut;\n    };\n\n    _this.handleDimensionsUpdate = function (dimensionsUpdate) {\n      if (!_this.props.deviceHeight && !_this.props.deviceWidth) {\n        var deviceWidth = Dimensions.get(\"window\").width;\n        var deviceHeight = Dimensions.get(\"window\").height;\n\n        if (deviceWidth !== _this.state.deviceWidth || deviceHeight !== _this.state.deviceHeight) {\n          _this.setState({\n            deviceWidth: deviceWidth,\n            deviceHeight: deviceHeight\n          });\n        }\n      }\n    };\n\n    _this.open = function () {\n      if (_this.transitionLock) return;\n      _this.transitionLock = true;\n\n      if (_this.backdropRef) {\n        _this.backdropRef.transitionTo({\n          opacity: _this.props.backdropOpacity\n        }, _this.props.backdropTransitionInTiming);\n      }\n\n      if (_this.state.isSwipeable) {\n        _this.state.pan.setValue({\n          x: 0,\n          y: 0\n        });\n      }\n\n      if (_this.contentRef) {\n        _this.contentRef[_this.animationIn](_this.props.animationInTiming).then(function () {\n          _this.transitionLock = false;\n\n          if (!_this.props.isVisible) {\n            _this.close();\n          } else {\n            _this.props.onModalShow();\n          }\n        });\n      }\n    };\n\n    _this.close = function () {\n      if (_this.transitionLock) return;\n      _this.transitionLock = true;\n\n      if (_this.backdropRef) {\n        _this.backdropRef.transitionTo({\n          opacity: 0\n        }, _this.props.backdropTransitionOutTiming);\n      }\n\n      var animationOut = _this.animationOut;\n\n      if (_this.inSwipeClosingState) {\n        _this.inSwipeClosingState = false;\n\n        if (_this.props.swipeDirection === \"up\") {\n          animationOut = \"slideOutUp\";\n        } else if (_this.props.swipeDirection === \"down\") {\n          animationOut = \"slideOutDown\";\n        } else if (_this.props.swipeDirection === \"right\") {\n          animationOut = \"slideOutRight\";\n        } else if (_this.props.swipeDirection === \"left\") {\n          animationOut = \"slideOutLeft\";\n        }\n      }\n\n      if (_this.contentRef) {\n        _this.contentRef[animationOut](_this.props.animationOutTiming).then(function () {\n          _this.transitionLock = false;\n\n          if (_this.props.isVisible) {\n            _this.open();\n          } else {\n            _this.setState({\n              showContent: false\n            }, function () {\n              _this.setState({\n                isVisible: false\n              });\n            });\n\n            _this.props.onModalHide();\n          }\n        });\n      }\n    };\n\n    _this.buildAnimations(_props);\n\n    if (_this.state.isSwipeable) {\n      _this.state = _objectSpread(_objectSpread({}, _this.state), {}, {\n        pan: new Animated.ValueXY()\n      });\n\n      _this.buildPanResponder();\n    }\n\n    if (_this.props.isVisible) {\n      _this.state = _objectSpread(_objectSpread({}, _this.state), {}, {\n        isVisible: true,\n        showContent: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(ReactNativeModal, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (!this.state.isVisible && nextProps.isVisible) {\n        this.setState({\n          isVisible: true,\n          showContent: true\n        });\n      }\n\n      if (this.props.animationIn !== nextProps.animationIn || this.props.animationOut !== nextProps.animationOut) {\n        this.buildAnimations(nextProps);\n      }\n\n      if (this.props.backdropOpacity !== nextProps.backdropOpacity && this.backdropRef) {\n        this.backdropRef.transitionTo({\n          opacity: nextProps.backdropOpacity\n        }, this.props.backdropTransitionInTiming);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.state.isVisible) {\n        this.open();\n      }\n\n      DeviceEventEmitter.addListener(\"didUpdateDimensions\", this.handleDimensionsUpdate);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      DeviceEventEmitter.removeListener(\"didUpdateDimensions\", this.handleDimensionsUpdate);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.isVisible && !prevProps.isVisible) {\n        this.open();\n      } else if (!this.props.isVisible && prevProps.isVisible) {\n        this.close();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          animationIn = _this$props.animationIn,\n          animationInTiming = _this$props.animationInTiming,\n          animationOut = _this$props.animationOut,\n          animationOutTiming = _this$props.animationOutTiming,\n          avoidKeyboard = _this$props.avoidKeyboard,\n          backdropColor = _this$props.backdropColor,\n          backdropOpacity = _this$props.backdropOpacity,\n          backdropTransitionInTiming = _this$props.backdropTransitionInTiming,\n          backdropTransitionOutTiming = _this$props.backdropTransitionOutTiming,\n          children = _this$props.children,\n          deviceHeightProp = _this$props.deviceHeight,\n          deviceWidthProp = _this$props.deviceWidth,\n          isVisible = _this$props.isVisible,\n          onModalShow = _this$props.onModalShow,\n          onBackdropPress = _this$props.onBackdropPress,\n          onBackButtonPress = _this$props.onBackButtonPress,\n          useNativeDriver = _this$props.useNativeDriver,\n          style = _this$props.style,\n          otherProps = _objectWithoutProperties(_this$props, [\"animationIn\", \"animationInTiming\", \"animationOut\", \"animationOutTiming\", \"avoidKeyboard\", \"backdropColor\", \"backdropOpacity\", \"backdropTransitionInTiming\", \"backdropTransitionOutTiming\", \"children\", \"deviceHeight\", \"deviceWidth\", \"isVisible\", \"onModalShow\", \"onBackdropPress\", \"onBackButtonPress\", \"useNativeDriver\", \"style\"]);\n\n      var deviceWidth = deviceWidthProp || this.state.deviceWidth;\n      var deviceHeight = deviceHeightProp || this.state.deviceHeight;\n      var computedStyle = [{\n        margin: deviceWidth * 0.05,\n        transform: [{\n          translateY: 0\n        }]\n      }, styles.content, style];\n      var panHandlers = {};\n      var panPosition = {};\n\n      if (this.state.isSwipeable) {\n        panHandlers = _objectSpread({}, this.panResponder.panHandlers);\n        panPosition = this.state.pan.getLayout();\n      }\n\n      var _children = this.props.hideModalContentWhileAnimating && this.props.useNativeDriver && !this.state.showContent ? React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 9\n        }\n      }) : children;\n\n      var containerView = React.createElement(View, _extends({}, panHandlers, {\n        ref: function ref(_ref2) {\n          return _this2.contentRef = _ref2;\n        },\n        style: [panPosition, computedStyle],\n        pointerEvents: \"box-none\",\n        useNativeDriver: useNativeDriver\n      }, otherProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 7\n        }\n      }), _children);\n      return React.createElement(Modal, _extends({\n        transparent: true,\n        animationType: \"none\",\n        visible: this.state.isVisible,\n        onRequestClose: onBackButtonPress\n      }, otherProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 7\n        }\n      }), React.createElement(TouchableWithoutFeedback, {\n        onPress: onBackdropPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        ref: function ref(_ref3) {\n          return _this2.backdropRef = _ref3;\n        },\n        useNativeDriver: useNativeDriver,\n        style: [styles.backdrop, {\n          backgroundColor: this.state.showContent ? backdropColor : \"transparent\",\n          width: deviceWidth,\n          height: deviceHeight\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }\n      })), avoidKeyboard && React.createElement(KeyboardAvoidingView, {\n        behavior: Platform.OS === \"ios\" ? \"padding\" : null,\n        pointerEvents: \"box-none\",\n        style: computedStyle.concat([{\n          margin: 0\n        }]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }\n      }, containerView), !avoidKeyboard && containerView);\n    }\n  }]);\n\n  return ReactNativeModal;\n}(Component);\n\nReactNativeModal.propTypes = {\n  animationIn: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  animationInTiming: PropTypes.number,\n  animationOut: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  animationOutTiming: PropTypes.number,\n  avoidKeyboard: PropTypes.bool,\n  backdropColor: PropTypes.string,\n  backdropOpacity: PropTypes.number,\n  backdropTransitionInTiming: PropTypes.number,\n  backdropTransitionOutTiming: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  deviceHeight: PropTypes.number,\n  deviceWidth: PropTypes.number,\n  isVisible: PropTypes.bool.isRequired,\n  hideModalContentWhileAnimating: PropTypes.bool,\n  onModalShow: PropTypes.func,\n  onModalHide: PropTypes.func,\n  onBackButtonPress: PropTypes.func,\n  onBackdropPress: PropTypes.func,\n  onSwipe: PropTypes.func,\n  swipeThreshold: PropTypes.number,\n  swipeDirection: PropTypes.oneOf([\"up\", \"down\", \"left\", \"right\"]),\n  useNativeDriver: PropTypes.bool,\n  style: PropTypes.any,\n  scrollTo: PropTypes.func,\n  scrollOffset: PropTypes.number,\n  scrollOffsetMax: PropTypes.number,\n  supportedOrientations: PropTypes.arrayOf(PropTypes.oneOf([\"portrait\", \"portrait-upside-down\", \"landscape\", \"landscape-left\", \"landscape-right\"]))\n};\nReactNativeModal.defaultProps = {\n  animationIn: \"slideInUp\",\n  animationInTiming: 300,\n  animationOut: \"slideOutDown\",\n  animationOutTiming: 300,\n  avoidKeyboard: false,\n  backdropColor: \"black\",\n  backdropOpacity: 0.7,\n  backdropTransitionInTiming: 300,\n  backdropTransitionOutTiming: 300,\n  onModalShow: function onModalShow() {\n    return null;\n  },\n  deviceHeight: null,\n  deviceWidth: null,\n  onModalHide: function onModalHide() {\n    return null;\n  },\n  isVisible: false,\n  hideModalContentWhileAnimating: false,\n  onBackdropPress: function onBackdropPress() {\n    return null;\n  },\n  onBackButtonPress: function onBackButtonPress() {\n    return null;\n  },\n  swipeThreshold: 100,\n  useNativeDriver: false,\n  scrollTo: null,\n  scrollOffset: 0,\n  scrollOffsetMax: 0,\n  supportedOrientations: [\"portrait\", \"landscape\"]\n};\nexport default ReactNativeModal;\nexport { ReactNativeModal };","map":{"version":3,"sources":["C:/Users/kawab/Desktop/expresslog/node_modules/react-native-modal/src/index.js"],"names":["React","Component","PropTypes","View","initializeRegistryWithDefinitions","registerAnimation","createAnimation","ANIMATION_DEFINITIONS","styles","makeAnimation","name","obj","isObject","ReactNativeModal","props","state","showContent","isVisible","deviceWidth","Dimensions","get","width","deviceHeight","height","isSwipeable","swipeDirection","pan","transitionLock","inSwipeClosingState","buildPanResponder","animEvt","Animated","event","dx","x","dy","y","panResponder","PanResponder","create","onMoveShouldSetPanResponder","evt","gestureState","Math","abs","onStartShouldSetPanResponder","scrollTo","scrollOffset","onPanResponderMove","accDistance","getAccDistancePerDirection","newOpacityFactor","isSwipeDirectionAllowed","backdropRef","transitionTo","opacity","backdropOpacity","offsetY","scrollOffsetMax","animated","onPanResponderRelease","swipeThreshold","onSwipe","backdropTransitionInTiming","spring","toValue","bounciness","start","draggedDown","draggedUp","draggedLeft","draggedRight","buildAnimations","animationIn","animationOut","animationName","JSON","stringify","handleDimensionsUpdate","dimensionsUpdate","setState","open","setValue","contentRef","animationInTiming","then","close","onModalShow","backdropTransitionOutTiming","animationOutTiming","onModalHide","ValueXY","nextProps","DeviceEventEmitter","addListener","removeListener","prevProps","prevState","avoidKeyboard","backdropColor","children","deviceHeightProp","deviceWidthProp","onBackdropPress","onBackButtonPress","useNativeDriver","style","otherProps","computedStyle","margin","transform","translateY","content","panHandlers","panPosition","getLayout","_children","hideModalContentWhileAnimating","containerView","ref","backdrop","backgroundColor","Platform","OS","concat","propTypes","oneOfType","string","object","number","bool","node","isRequired","func","oneOf","any","supportedOrientations","arrayOf","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Dimensions,\n  Modal,\n  DeviceEventEmitter,\n  TouchableWithoutFeedback,\n  KeyboardAvoidingView,\n  Platform,\n  PanResponder,\n  Animated\n} from \"react-native\";\nimport PropTypes from \"prop-types\";\nimport {\n  View,\n  initializeRegistryWithDefinitions,\n  registerAnimation,\n  createAnimation\n} from \"react-native-animatable\";\nimport * as ANIMATION_DEFINITIONS from \"./animations\";\n\nimport styles from \"./index.style.js\";\n\n// Override default animations\ninitializeRegistryWithDefinitions(ANIMATION_DEFINITIONS);\n\n// Utility for creating custom animations\nconst makeAnimation = (name, obj) => {\n  registerAnimation(name, createAnimation(obj));\n};\n\nconst isObject = obj => {\n  return obj !== null && typeof obj === \"object\";\n};\n\nclass ReactNativeModal extends Component {\n  static propTypes = {\n    animationIn: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    animationInTiming: PropTypes.number,\n    animationOut: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    animationOutTiming: PropTypes.number,\n    avoidKeyboard: PropTypes.bool,\n    backdropColor: PropTypes.string,\n    backdropOpacity: PropTypes.number,\n    backdropTransitionInTiming: PropTypes.number,\n    backdropTransitionOutTiming: PropTypes.number,\n    children: PropTypes.node.isRequired,\n    deviceHeight: PropTypes.number,\n    deviceWidth: PropTypes.number,\n    isVisible: PropTypes.bool.isRequired,\n    hideModalContentWhileAnimating: PropTypes.bool,\n    onModalShow: PropTypes.func,\n    onModalHide: PropTypes.func,\n    onBackButtonPress: PropTypes.func,\n    onBackdropPress: PropTypes.func,\n    onSwipe: PropTypes.func,\n    swipeThreshold: PropTypes.number,\n    swipeDirection: PropTypes.oneOf([\"up\", \"down\", \"left\", \"right\"]),\n    useNativeDriver: PropTypes.bool,\n    style: PropTypes.any,\n    scrollTo: PropTypes.func,\n    scrollOffset: PropTypes.number,\n    scrollOffsetMax: PropTypes.number,\n    supportedOrientations: PropTypes.arrayOf(\n      PropTypes.oneOf([\n        \"portrait\",\n        \"portrait-upside-down\",\n        \"landscape\",\n        \"landscape-left\",\n        \"landscape-right\"\n      ])\n    )\n  };\n\n  static defaultProps = {\n    animationIn: \"slideInUp\",\n    animationInTiming: 300,\n    animationOut: \"slideOutDown\",\n    animationOutTiming: 300,\n    avoidKeyboard: false,\n    backdropColor: \"black\",\n    backdropOpacity: 0.7,\n    backdropTransitionInTiming: 300,\n    backdropTransitionOutTiming: 300,\n    onModalShow: () => null,\n    deviceHeight: null,\n    deviceWidth: null,\n    onModalHide: () => null,\n    isVisible: false,\n    hideModalContentWhileAnimating: false,\n    onBackdropPress: () => null,\n    onBackButtonPress: () => null,\n    swipeThreshold: 100,\n    useNativeDriver: false,\n    scrollTo: null,\n    scrollOffset: 0,\n    scrollOffsetMax: 0,\n    supportedOrientations: [\"portrait\", \"landscape\"]\n  };\n\n  // We use an internal state for keeping track of the modal visibility: this allows us to keep\n  // the modal visibile during the exit animation, even if the user has already change the\n  // isVisible prop to false.\n  // We store in the state the device width and height so that we can update the modal on\n  // device rotation.\n  state = {\n    showContent: true,\n    isVisible: false,\n    deviceWidth: Dimensions.get(\"window\").width,\n    deviceHeight: Dimensions.get(\"window\").height,\n    isSwipeable: this.props.swipeDirection ? true : false,\n    pan: null\n  };\n\n  transitionLock = null;\n  inSwipeClosingState = false;\n\n  constructor(props) {\n    super(props);\n    this.buildAnimations(props);\n    if (this.state.isSwipeable) {\n      this.state = { ...this.state, pan: new Animated.ValueXY() };\n      this.buildPanResponder();\n    }\n    if (this.props.isVisible) {\n      this.state = {\n        ...this.state,\n        isVisible: true,\n        showContent: true\n      };\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!this.state.isVisible && nextProps.isVisible) {\n      this.setState({ isVisible: true, showContent: true });\n    }\n    if (\n      this.props.animationIn !== nextProps.animationIn ||\n      this.props.animationOut !== nextProps.animationOut\n    ) {\n      this.buildAnimations(nextProps);\n    }\n    if (\n      this.props.backdropOpacity !== nextProps.backdropOpacity &&\n      this.backdropRef\n    ) {\n      this.backdropRef.transitionTo(\n        { opacity: nextProps.backdropOpacity },\n        this.props.backdropTransitionInTiming\n      );\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.isVisible) {\n      this.open();\n    }\n    DeviceEventEmitter.addListener(\n      \"didUpdateDimensions\",\n      this.handleDimensionsUpdate\n    );\n  }\n\n  componentWillUnmount() {\n    DeviceEventEmitter.removeListener(\n      \"didUpdateDimensions\",\n      this.handleDimensionsUpdate\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // On modal open request, we slide the view up and fade in the backdrop\n    if (this.props.isVisible && !prevProps.isVisible) {\n      this.open();\n    } else if (!this.props.isVisible && prevProps.isVisible) {\n      // On modal close request, we slide the view down and fade out the backdrop\n      this.close();\n    }\n  }\n\n  buildPanResponder = () => {\n    let animEvt = null;\n\n    if (\n      this.props.swipeDirection === \"right\" ||\n      this.props.swipeDirection === \"left\"\n    ) {\n      animEvt = Animated.event([null, { dx: this.state.pan.x }]);\n    } else {\n      animEvt = Animated.event([null, { dy: this.state.pan.y }]);\n    }\n\n    this.panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: (evt, gestureState) => {\n        // The number \"4\" is just a good tradeoff to make the panResponder\n        // work correctly even when the modal has touchable buttons.\n        // For reference:\n        // https://github.com/react-native-community/react-native-modal/pull/197\n        return Math.abs(gestureState.dx) >= 4 || Math.abs(gestureState.dy) >= 4;\n      },\n      onStartShouldSetPanResponder: () => {\n        if (this.props.scrollTo) {\n          if (this.props.scrollOffset > 0) {\n            return false; // user needs to be able to scroll content back up\n          }\n        }\n        return true;\n      },\n      onPanResponderMove: (evt, gestureState) => {\n        // Dim the background while swiping the modal\n        const deviceWidth = this.props.deviceWidth || this.state.deviceWidth;\n        const accDistance = this.getAccDistancePerDirection(gestureState);\n        const newOpacityFactor = 1 - accDistance / deviceWidth;\n        if (this.isSwipeDirectionAllowed(gestureState)) {\n          this.backdropRef &&\n            this.backdropRef.transitionTo({\n              opacity: this.props.backdropOpacity * newOpacityFactor\n            });\n          animEvt(evt, gestureState);\n        } else {\n          if (this.props.scrollTo) {\n            let offsetY = -gestureState.dy;\n            if (offsetY > this.props.scrollOffsetMax) {\n              offsetY -= (offsetY - this.props.scrollOffsetMax) / 2;\n            }\n            this.props.scrollTo({ y: offsetY, animated: false });\n          }\n        }\n      },\n      onPanResponderRelease: (evt, gestureState) => {\n        // Call the onSwipe prop if the threshold has been exceeded\n        const accDistance = this.getAccDistancePerDirection(gestureState);\n        if (accDistance > this.props.swipeThreshold) {\n          if (this.props.onSwipe) {\n            this.inSwipeClosingState = true;\n            this.props.onSwipe();\n            return;\n          }\n        }\n        //Reset backdrop opacity and modal position\n        if (this.backdropRef) {\n          this.backdropRef.transitionTo(\n            { opacity: this.props.backdropOpacity },\n            this.props.backdropTransitionInTiming\n          );\n        }\n        Animated.spring(this.state.pan, {\n          toValue: { x: 0, y: 0 },\n          bounciness: 0\n        }).start();\n        if (this.props.scrollOffset > this.props.scrollOffsetMax) {\n          this.props.scrollTo({\n            y: this.props.scrollOffsetMax,\n            animated: true\n          });\n        }\n      }\n    });\n  };\n\n  getAccDistancePerDirection = gestureState => {\n    switch (this.props.swipeDirection) {\n      case \"up\":\n        return -gestureState.dy;\n      case \"down\":\n        return gestureState.dy;\n      case \"right\":\n        return gestureState.dx;\n      case \"left\":\n        return -gestureState.dx;\n      default:\n        return 0;\n    }\n  };\n\n  isSwipeDirectionAllowed = ({ dy, dx }) => {\n    const draggedDown = dy > 0;\n    const draggedUp = dy < 0;\n    const draggedLeft = dx < 0;\n    const draggedRight = dx > 0;\n\n    if (this.props.swipeDirection === \"up\" && draggedUp) {\n      return true;\n    } else if (this.props.swipeDirection === \"down\" && draggedDown) {\n      return true;\n    } else if (this.props.swipeDirection === \"right\" && draggedRight) {\n      return true;\n    } else if (this.props.swipeDirection === \"left\" && draggedLeft) {\n      return true;\n    }\n    return false;\n  };\n\n  // User can define custom react-native-animatable animations, see PR #72\n  buildAnimations = props => {\n    let animationIn = props.animationIn;\n    let animationOut = props.animationOut;\n\n    if (isObject(animationIn)) {\n      const animationName = JSON.stringify(animationIn);\n      makeAnimation(animationName, animationIn);\n      animationIn = animationName;\n    }\n\n    if (isObject(animationOut)) {\n      const animationName = JSON.stringify(animationOut);\n      makeAnimation(animationName, animationOut);\n      animationOut = animationName;\n    }\n\n    this.animationIn = animationIn;\n    this.animationOut = animationOut;\n  };\n\n  handleDimensionsUpdate = dimensionsUpdate => {\n    if (!this.props.deviceHeight && !this.props.deviceWidth) {\n      // Here we update the device dimensions in the state if the layout changed\n      // (triggering a render)\n      const deviceWidth = Dimensions.get(\"window\").width;\n      const deviceHeight = Dimensions.get(\"window\").height;\n      if (\n        deviceWidth !== this.state.deviceWidth ||\n        deviceHeight !== this.state.deviceHeight\n      ) {\n        this.setState({ deviceWidth, deviceHeight });\n      }\n    }\n  };\n\n  open = () => {\n    if (this.transitionLock) return;\n    this.transitionLock = true;\n    if (this.backdropRef) {\n      this.backdropRef.transitionTo(\n        { opacity: this.props.backdropOpacity },\n        this.props.backdropTransitionInTiming\n      );\n    }\n\n    // This is for reset the pan position, if not modal get stuck\n    // at the last release position when you try to open it.\n    // Could certainly be improve - no idea for the moment.\n    if (this.state.isSwipeable) {\n      this.state.pan.setValue({ x: 0, y: 0 });\n    }\n\n    if (this.contentRef) {\n      this.contentRef[this.animationIn](this.props.animationInTiming).then(\n        () => {\n          this.transitionLock = false;\n          if (!this.props.isVisible) {\n            this.close();\n          } else {\n            this.props.onModalShow();\n          }\n        }\n      );\n    }\n  };\n\n  close = () => {\n    if (this.transitionLock) return;\n    this.transitionLock = true;\n    if (this.backdropRef) {\n      this.backdropRef.transitionTo(\n        { opacity: 0 },\n        this.props.backdropTransitionOutTiming\n      );\n    }\n\n    let animationOut = this.animationOut;\n\n    if (this.inSwipeClosingState) {\n      this.inSwipeClosingState = false;\n      if (this.props.swipeDirection === \"up\") {\n        animationOut = \"slideOutUp\";\n      } else if (this.props.swipeDirection === \"down\") {\n        animationOut = \"slideOutDown\";\n      } else if (this.props.swipeDirection === \"right\") {\n        animationOut = \"slideOutRight\";\n      } else if (this.props.swipeDirection === \"left\") {\n        animationOut = \"slideOutLeft\";\n      }\n    }\n\n    if (this.contentRef) {\n      this.contentRef[animationOut](this.props.animationOutTiming).then(() => {\n        this.transitionLock = false;\n        if (this.props.isVisible) {\n          this.open();\n        } else {\n          this.setState(\n            {\n              showContent: false\n            },\n            () => {\n              this.setState({\n                isVisible: false\n              });\n            }\n          );\n          this.props.onModalHide();\n        }\n      });\n    }\n  };\n\n  render() {\n    const {\n      animationIn,\n      animationInTiming,\n      animationOut,\n      animationOutTiming,\n      avoidKeyboard,\n      backdropColor,\n      backdropOpacity,\n      backdropTransitionInTiming,\n      backdropTransitionOutTiming,\n      children,\n      deviceHeight: deviceHeightProp,\n      deviceWidth: deviceWidthProp,\n      isVisible,\n      onModalShow,\n      onBackdropPress,\n      onBackButtonPress,\n      useNativeDriver,\n      style,\n      ...otherProps\n    } = this.props;\n    const deviceWidth = deviceWidthProp || this.state.deviceWidth;\n    const deviceHeight = deviceHeightProp || this.state.deviceHeight;\n\n    const computedStyle = [\n      { margin: deviceWidth * 0.05, transform: [{ translateY: 0 }] },\n      styles.content,\n      style\n    ];\n\n    let panHandlers = {};\n    let panPosition = {};\n    if (this.state.isSwipeable) {\n      panHandlers = { ...this.panResponder.panHandlers };\n      panPosition = this.state.pan.getLayout();\n    }\n\n    const _children =\n      this.props.hideModalContentWhileAnimating &&\n      this.props.useNativeDriver &&\n      !this.state.showContent ? (\n        <View />\n      ) : (\n        children\n      );\n    const containerView = (\n      <View\n        {...panHandlers}\n        ref={ref => (this.contentRef = ref)}\n        style={[panPosition, computedStyle]}\n        pointerEvents=\"box-none\"\n        useNativeDriver={useNativeDriver}\n        {...otherProps}\n      >\n        {_children}\n      </View>\n    );\n\n    return (\n      <Modal\n        transparent={true}\n        animationType={\"none\"}\n        visible={this.state.isVisible}\n        onRequestClose={onBackButtonPress}\n        {...otherProps}\n      >\n        <TouchableWithoutFeedback onPress={onBackdropPress}>\n          <View\n            ref={ref => (this.backdropRef = ref)}\n            useNativeDriver={useNativeDriver}\n            style={[\n              styles.backdrop,\n              {\n                backgroundColor: this.state.showContent\n                  ? backdropColor\n                  : \"transparent\",\n                width: deviceWidth,\n                height: deviceHeight\n              }\n            ]}\n          />\n        </TouchableWithoutFeedback>\n\n        {avoidKeyboard && (\n          <KeyboardAvoidingView\n            behavior={Platform.OS === \"ios\" ? \"padding\" : null}\n            pointerEvents=\"box-none\"\n            style={computedStyle.concat([{ margin: 0 }])}\n          >\n            {containerView}\n          </KeyboardAvoidingView>\n        )}\n\n        {!avoidKeyboard && containerView}\n      </Modal>\n    );\n  }\n}\n\nexport default ReactNativeModal;\nexport { ReactNativeModal };\n"]},"metadata":{},"sourceType":"module"}