{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kawab\\\\Desktop\\\\expresslog\\\\src\\\\Screen\\\\HomeLetsGo\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\nimport MapView, { Marker } from 'react-native-maps';\nvar width = Dimensions.get(\"window\").width;\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport container from \"../../Styles/Container/style\";\nimport style from \"./style\";\nimport Button from \"../../Component/Button/index\";\nimport Back from \"../../Component/Back/index\";\nimport PolylineDirection from '@react-native-maps/polyline-direction';\nimport { withOrientation } from \"react-navigation\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { getDistance, getPreciseDistance } from 'geolib';\nimport Spinner from 'react-native-loading-spinner-overlay';\nvar plat = 0,\n    plong = 0,\n    dlat = 0,\n    dlong = 0;\nvar daddress = null,\n    pstreet = null;\nvar origin = null,\n    destination = null;\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n\n    _this._retrieveData = function _callee() {\n      var pickup, pickupstate;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@CityName'));\n\n            case 3:\n              pickup = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@PickUpState'));\n\n            case 6:\n              pickupstate = _context.sent;\n\n              if (pickup !== null) {\n                console.log(\"Pick up State \" + pickupstate);\n                console.log(\"Pick up City \" + pickup);\n\n                _this.setState({\n                  pickupCity: pickup\n                });\n\n                _this.setState({\n                  pickupState: pickupstate\n                });\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"City bame us null\");\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    };\n\n    _this.processColor = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (_this.state.lat === 0) {\n                alert(\"Please enter Drop Off Location\");\n              } else {\n                try {\n                  _this.props.navigation.navigate('BookingReqUp', {\n                    platitude: plat,\n                    plongitude: plong,\n                    dlatitude: dlat,\n                    dlongitude: dlong,\n                    deaddress: daddress,\n                    pestreet: pstreet\n                  });\n                } catch (error) {\n                  console.log(\"Error saving data\");\n                }\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._storeData = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@CityNameDestination', _this.state.city));\n\n            case 3:\n              _context3.next = 8;\n              break;\n\n            case 5:\n              _context3.prev = 5;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(\"Error saving Data\");\n\n            case 8:\n              _context3.prev = 8;\n              _context3.next = 11;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@addressDestination', _this.state.address));\n\n            case 11:\n              _context3.next = 16;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t1 = _context3[\"catch\"](8);\n              console.log(\"Error saving Data\");\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 5], [8, 13]], Promise);\n    };\n\n    _this._storelocation = function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@dstatename', _this.state.stateName));\n\n            case 3:\n              _context4.next = 8;\n              break;\n\n            case 5:\n              _context4.prev = 5;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(\"Error saving Data\");\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    };\n\n    _this._storeDistance = function _callee5() {\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@distance', _this.state.distance));\n\n            case 3:\n              _context5.next = 8;\n              break;\n\n            case 5:\n              _context5.prev = 5;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(\"Distance is null\");\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    };\n\n    _this._storeDuration = function _callee6() {\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@duration', _this.state.duration));\n\n            case 3:\n              _context6.next = 8;\n              break;\n\n            case 5:\n              _context6.prev = 5;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.log(\"Duration is null\");\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    };\n\n    _this._loadData = function () {\n      plat = _this.props.navigation.state.params.platitude;\n      plong = _this.props.navigation.state.params.plongitude;\n      daddress = _this.state.address ? _this.state.address : null;\n      pstreet = _this.props.navigation.state.params.pstreet;\n      origin = {\n        latitude: plat,\n        longitude: plong\n      };\n\n      _this.setState({\n        spinner: false\n      }, function () {});\n    };\n\n    _this._loadDatad = function () {\n      dlat = _this.state.lat;\n      dlong = _this.state.lng;\n      destination = {\n        latitude: dlat,\n        longitude: dlong\n      };\n    };\n\n    _this._getPreciseDistance = function () {\n      var plat = _this.props.navigation.state.params.platitude;\n      var plong = _this.props.navigation.state.params.plongitude;\n\n      if (_this.state.lat === 0) {} else {\n        _this.getDistanceOneToOne(plat, plong, _this.state.lat, _this.state.lng);\n      }\n    };\n\n    _this.state = {\n      address: null,\n      lat: 0,\n      lng: 0,\n      city: null,\n      pickupCity: null,\n      pickupState: null,\n      stateName: null,\n      price: null,\n      duration: \"\",\n      distance: \"\",\n      spinner: true\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              this._retrieveData();\n\n              this._loadData();\n\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getAdds\",\n    value: function getAdds(data) {\n      console.log(\"add\", data);\n      this.setState({\n        address: data.formatted_address,\n        lat: data.geometry.location.lat,\n        lng: data.geometry.location.lng,\n        stateName: data.address_components.filter(function (x) {\n          return x.types.filter(function (t) {\n            return t == 'administrative_area_level_1';\n          }).length > 0;\n        })[0].long_name,\n        city: data.address_components[1].long_name\n      });\n\n      this._storelocation();\n\n      this._storeData();\n\n      this._loadDatad();\n\n      console.log(\"this.state.address\", this.state.address);\n      console.log(\"this.state.coordinates\", this.state.lat, this.state.lng);\n      console.log(\"Destination City Name\" + \" \" + this.state.city);\n      console.log(\"Destination State Name\" + \" \" + this.state.stateName);\n      console.log(\"Pick up City Name\" + \" \" + this.state.pickupCity);\n      console.log(\"Pick up State Name\" + \" \" + this.state.pickupState);\n\n      this._getPreciseDistance();\n    }\n  }, {\n    key: \"getDistanceOneToOne\",\n    value: function getDistanceOneToOne(lat1, lng1, lat2, lng2) {\n      var _this2 = this;\n\n      var Location1Str = lat1 + \",\" + lng1;\n      var Location2Str = lat2 + \",\" + lng2;\n      var ApiURL = \"https://maps.googleapis.com/maps/api/distancematrix/json?\";\n      var params = \"origins=\" + Location1Str + \"&destinations=\" + Location2Str + \"&key=AIzaSyC7bi_TnkSCakWUI0pjTf6y_Ho3Pt2q4E0\";\n      var finalApiURL = \"\" + ApiURL + encodeURI(params);\n\n      if (this.state.lat === 0) {} else {\n        (function _callee7() {\n          var fetchResult, Result;\n          return _regeneratorRuntime.async(function _callee7$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return _regeneratorRuntime.awrap(fetch(finalApiURL));\n\n                case 2:\n                  fetchResult = _context8.sent;\n                  _context8.next = 5;\n                  return _regeneratorRuntime.awrap(fetchResult.json());\n\n                case 5:\n                  Result = _context8.sent;\n\n                  _this2.setState({\n                    distance: Result.rows[\"0\"].elements[\"0\"].distance.text\n                  });\n\n                  _this2._storeDistance();\n\n                  _this2.setState({\n                    duration: Result.rows[\"0\"].elements[\"0\"].duration.text\n                  });\n\n                  _this2._storeDuration();\n\n                  console.log(\"The Duration\" + _this2.state.duration);\n                  console.log(\"The Distance\" + _this2.state.distance);\n                  return _context8.abrupt(\"return\", Result.rows[\"0\"].elements[\"0\"].duration.text);\n\n                case 13:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        })();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: container.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"dark-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 17\n        }\n      }), React.createElement(Spinner, {\n        visible: this.state.spinner,\n        textContent: 'Loading...',\n        overlayColor: 'rgba(0, 0, 0, 0.8)',\n        textStyle: {\n          color: '#FFF'\n        },\n        cancelable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 17\n        }\n      }), React.createElement(MapView, {\n        provider: MapView.PROVIDER_GOOGLE,\n        style: {\n          flex: 1\n        },\n        initialRegion: {\n          latitude: plat,\n          longitude: plong,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 17\n        }\n      }, React.createElement(Marker, {\n        coordinate: {\n          latitude: plat,\n          longitude: plong\n        },\n        title: \"Pick up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          backgroundColor: '#fff',\n          fontWeight: 'bold',\n          padding: 7\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }\n      }, \"Pick up\"), React.createElement(Image, {\n        source: require(\"../../Image/pin2.png\"),\n        style: {\n          width: 50,\n          height: 50,\n          alignSelf: \"center\",\n          resizeMode: \"contain\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 25\n        }\n      })), React.createElement(Marker, {\n        coordinate: {\n          latitude: dlat,\n          longitude: dlong\n        },\n        title: \"Drop Off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          backgroundColor: '#008000',\n          fontWeight: 'bold',\n          padding: 25,\n          color: '#fff',\n          borderRadius: 150,\n          marginVertical: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 25\n        }\n      }, this.state.duration), React.createElement(Text, {\n        style: {\n          backgroundColor: '#fff',\n          fontWeight: 'bold',\n          padding: 7,\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 25\n        }\n      }, \"Drop Off\"), React.createElement(Image, {\n        source: require(\"../../Image/pin.png\"),\n        style: {\n          width: 50,\n          height: 50,\n          alignSelf: \"center\",\n          resizeMode: \"contain\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 25\n        }\n      })), React.createElement(PolylineDirection, {\n        origin: origin,\n        destination: destination,\n        apiKey: \"AIzaSyC7bi_TnkSCakWUI0pjTf6y_Ho3Pt2q4E0\",\n        strokeWidth: 4,\n        strokeColor: \"#12bc00\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 21\n        }\n      })), React.createElement(GooglePlacesAutocomplete, {\n        placeholder: \"Enter Drop Off Location\",\n        placeholderTextColor: \"#333\",\n        onPress: function onPress(data, details) {\n          console.log(data, details);\n          var data = details;\n\n          _this3.getAdds(data);\n\n          moveToUserLocation: true;\n        },\n        query: {\n          key: \"AIzaSyC7bi_TnkSCakWUI0pjTf6y_Ho3Pt2q4E0\",\n          language: \"en\"\n        },\n        textInputProps: {\n          autoCapitalize: \"none\",\n          autoCorrect: false\n        },\n        fetchDetails: true,\n        enablePoweredByContainer: false,\n        styles: {\n          container: {\n            position: \"absolute\",\n            top: Platform.select({\n              ios: 60,\n              android: 40\n            }),\n            width: \"100%\"\n          },\n          textInputContainer: {\n            flex: 1,\n            backgroundColor: \"transparent\",\n            height: 50,\n            marginHorizontal: 20,\n            borderTopWidth: 0,\n            borderBottomWidth: 0\n          },\n          textInput: {\n            height: 54,\n            margin: 0,\n            borderRadius: 0,\n            paddingTop: 0,\n            paddingBottom: 0,\n            paddingLeft: 50,\n            paddingRight: 20,\n            marginTop: 0,\n            marginLeft: 0,\n            marginRight: 0,\n            elevation: 5,\n            shadowColor: \"#000\",\n            shadowOpacity: 0.1,\n            shadowOffset: {\n              x: 0,\n              y: 0\n            },\n            shadowRadius: 15,\n            borderWidth: 1,\n            borderColor: \"#ddd\",\n            fontSize: 18\n          },\n          listView: {\n            borderWidth: 1,\n            borderColor: \"#ddd\",\n            backgroundColor: \"#fff\",\n            marginHorizontal: 20,\n            elevation: 5,\n            shadowColor: \"#000\",\n            shadowOpacity: 0.1,\n            shadowOffset: {\n              x: 0,\n              y: 0\n            },\n            shadowRadius: 15,\n            marginTop: 10\n          },\n          description: {\n            fontSize: 16\n          },\n          row: {\n            padding: 20,\n            height: 65\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 17\n        }\n      }), React.createElement(Back, {\n        onPress: function onPress() {\n          return _this3.props.navigation.goBack();\n        },\n        style: {\n          marginVertical: -90\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: style.subContainerView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('BookingReqUp', {\n            platitude: plat,\n            plongitude: plong,\n            dlatitude: dlat,\n            dlongitude: dlong,\n            deaddress: daddress,\n            pestreet: pstreet\n          });\n        },\n        onPress: function onPress() {\n          return _this3.processColor();\n        },\n        Text: \"Let's Go\",\n        viewStyle: {\n          margin: 0,\n          borderRadius: 0,\n          width: width\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport { index as default };","map":{"version":3,"sources":["C:/Users/kawab/Desktop/expresslog/src/Screen/HomeLetsGo/index.js"],"names":["React","Component","GooglePlacesAutocomplete","MapView","Marker","width","Dimensions","get","container","style","Button","Back","PolylineDirection","withOrientation","AsyncStorage","getDistance","getPreciseDistance","Spinner","plat","plong","dlat","dlong","daddress","pstreet","origin","destination","index","props","_retrieveData","getItem","pickup","pickupstate","console","log","setState","pickupCity","pickupState","processColor","state","lat","alert","navigation","navigate","platitude","plongitude","dlatitude","dlongitude","deaddress","pestreet","error","_storeData","setItem","city","address","_storelocation","stateName","_storeDistance","distance","_storeDuration","duration","_loadData","params","latitude","longitude","spinner","_loadDatad","lng","_getPreciseDistance","getDistanceOneToOne","price","data","formatted_address","geometry","location","address_components","filter","x","types","t","length","long_name","lat1","lng1","lat2","lng2","Location1Str","Location2Str","ApiURL","finalApiURL","encodeURI","fetch","fetchResult","json","Result","rows","elements","text","color","PROVIDER_GOOGLE","flex","latitudeDelta","longitudeDelta","backgroundColor","fontWeight","padding","require","height","alignSelf","resizeMode","borderRadius","marginVertical","textAlign","details","getAdds","moveToUserLocation","key","language","autoCapitalize","autoCorrect","position","top","Platform","select","ios","android","textInputContainer","marginHorizontal","borderTopWidth","borderBottomWidth","textInput","margin","paddingTop","paddingBottom","paddingLeft","paddingRight","marginTop","marginLeft","marginRight","elevation","shadowColor","shadowOpacity","shadowOffset","y","shadowRadius","borderWidth","borderColor","fontSize","listView","description","row","goBack","subContainerView"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\r\n\r\nimport MapView, { Marker } from 'react-native-maps';\r\nlet width = Dimensions.get(\"window\").width;\r\nimport {\r\n    Image,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    StatusBar,\r\n    Dimensions,\r\n    KeyboardAvoidingView,\r\n    Platform\r\n} from \"react-native\";\r\nimport container from \"../../Styles/Container/style\";\r\nimport style from \"./style\";\r\nimport Button from \"../../Component/Button/index\";\r\nimport Back from \"../../Component/Back/index\";\r\nimport PolylineDirection from '@react-native-maps/polyline-direction';\r\nimport { withOrientation } from \"react-navigation\";\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport { getDistance, getPreciseDistance } from 'geolib';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\n\r\nvar plat = 0, plong = 0, dlat = 0, dlong = 0\r\nvar daddress = null, pstreet = null\r\n\r\nvar origin = null, destination = null\r\n\r\n// import { Container } from './styles';\r\nexport default class index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            address: null,\r\n            lat: 0,\r\n            lng: 0,\r\n            city: null,\r\n            pickupCity: null,\r\n            pickupState: null,\r\n            stateName: null,\r\n            price: null,\r\n            duration: \"\",\r\n            distance: \"\",\r\n            spinner: true\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        this._retrieveData()\r\n        this._loadData()\r\n\r\n    }\r\n\r\n    /*\r\n\r\n    getPrice = async () => {\r\n        fetch('https://expressalllogistics.com/logistics/getpric.php', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n\r\n                ddeliveryCity: this.state.city,\r\n                ddeliveryState: this.state.stateName,\r\n                ppickupCity: this.state.pickupCity,\r\n                ppickupState: this.state.pickupState\r\n\r\n            })\r\n\r\n\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n\r\n\r\n\r\n\r\n                // If server response message same as Data Matched\r\n\r\n\r\n                //Then open Profile activity and send user email to profile activity.\r\n                //this.props.navigation.navigate('Second', { Email: UserEmail });\r\n\r\n                var pprice = responseJson.Tripcode;\r\n\r\n                if (pprice > 1) {\r\n                    // alert(price)\r\n\r\n\r\n\r\n                    this.setState({\r\n                        price: pprice\r\n                    }, () => {\r\n\r\n                        this._storePrice()\r\n\r\n                    })\r\n\r\n\r\n\r\n                    console.log(this.state.price)\r\n\r\n                }\r\n\r\n                else {\r\n                    alert(\"Couldnt get price\")\r\n                }\r\n\r\n\r\n\r\n\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    */\r\n\r\n\r\n    getAdds(data) {\r\n        console.log(\"add\", data);\r\n        this.setState(\r\n            {\r\n                address: data.formatted_address, // selected address\r\n                lat: data.geometry.location.lat,//  selected coordinates latitude\r\n                lng: data.geometry.location.lng, //  selected coordinates longitute\r\n                // city: data.address_components.filter(x => x.types.filter(t => t == 'administrative_area_level_1').length > 0)[0].short_name\r\n                stateName: data.address_components.filter(x => x.types.filter(t => t == 'administrative_area_level_1').length > 0)[0].long_name,\r\n                city: data.address_components[1].long_name,\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n        );\r\n\r\n        this._storelocation()\r\n\r\n        this._storeData()\r\n\r\n        //this.getPrice();\r\n\r\n        // this._loadData()\r\n\r\n        this._loadDatad()\r\n\r\n        console.log(\"this.state.address\", this.state.address); ///to console address\r\n        console.log(\"this.state.coordinates\", this.state.lat, this.state.lng); /// to console coordinates\r\n        console.log(\"Destination City Name\" + \" \" + this.state.city)\r\n        console.log(\"Destination State Name\" + \" \" + this.state.stateName)\r\n        console.log(\"Pick up City Name\" + \" \" + this.state.pickupCity)\r\n        console.log(\"Pick up State Name\" + \" \" + this.state.pickupState)\r\n\r\n\r\n        this._getPreciseDistance()\r\n\r\n    }\r\n\r\n    _retrieveData = async () => {\r\n        try {\r\n            //const value = await AsyncStorage.getItem('@CityNameDestination');\r\n            const pickup = await AsyncStorage.getItem('@CityName');\r\n            //const valuemobile = await AsyncStorage.getItem('@setMobile');\r\n            const pickupstate = await AsyncStorage.getItem('@PickUpState');\r\n\r\n            if (pickup !== null) {\r\n                // We have data!!\r\n                // console.log(\"City Destination name is \" + value);\r\n                //console.log(\"City name is \" + valuemobile);\r\n                console.log(\"Pick up State \" + pickupstate);\r\n                console.log(\"Pick up City \" + pickup);\r\n\r\n                this.setState({ pickupCity: pickup })\r\n                this.setState({ pickupState: pickupstate })\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            // Error retrieving data\r\n            console.log(\"City bame us null\");\r\n        }\r\n    };\r\n\r\n\r\n    processColor = async () => {\r\n\r\n        if (this.state.lat === 0) {\r\n            alert(\"Please enter Drop Off Location\")\r\n        }\r\n\r\n        else {\r\n\r\n            try {\r\n\r\n\r\n                this.props.navigation.navigate('BookingReqUp', { platitude: plat, plongitude: plong, dlatitude: dlat, dlongitude: dlong, deaddress: daddress, pestreet: pstreet })\r\n\r\n            }\r\n            catch (error) {\r\n                console.log(\"Error saving data\")\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    _storeData = async () => {\r\n        try {\r\n            await AsyncStorage.setItem(\r\n                '@CityNameDestination',\r\n                this.state.city\r\n            );\r\n\r\n\r\n        }\r\n        catch (error) {\r\n            // Error saving data\r\n            console.log(\"Error saving Data\")\r\n        }\r\n\r\n\r\n        try {\r\n            await AsyncStorage.setItem(\r\n                '@addressDestination',\r\n                this.state.address\r\n            );\r\n\r\n\r\n        }\r\n        catch (error) {\r\n            // Error saving data\r\n            console.log(\"Error saving Data\")\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    _storelocation = async () => {\r\n\r\n\r\n\r\n        try {\r\n            await AsyncStorage.setItem(\r\n                '@dstatename',\r\n                this.state.stateName\r\n            );\r\n\r\n\r\n        }\r\n        catch (error) {\r\n            // Error saving data\r\n            console.log(\"Error saving Data\")\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    _storeDistance = async () => {\r\n        try {\r\n\r\n            await AsyncStorage.setItem(\r\n                '@distance',\r\n                this.state.distance\r\n            );\r\n\r\n\r\n        }\r\n        catch (error) {\r\n            // Error saving data\r\n            console.log(\"Distance is null\")\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    _storeDuration = async () => {\r\n        try {\r\n\r\n            await AsyncStorage.setItem(\r\n                '@duration',\r\n                this.state.duration\r\n            );\r\n\r\n\r\n        }\r\n        catch (error) {\r\n            // Error saving data\r\n            console.log(\"Duration is null\")\r\n        }\r\n    };\r\n\r\n\r\n\r\n    getDistanceOneToOne(lat1, lng1, lat2, lng2) {\r\n        const Location1Str = lat1 + \",\" + lng1;\r\n        const Location2Str = lat2 + \",\" + lng2;\r\n\r\n        let ApiURL = \"https://maps.googleapis.com/maps/api/distancematrix/json?\";\r\n\r\n        let params = `origins=${Location1Str}&destinations=${Location2Str}&key=AIzaSyC7bi_TnkSCakWUI0pjTf6y_Ho3Pt2q4E0`; // you need to get a key\r\n        let finalApiURL = `${ApiURL}${encodeURI(params)}`;\r\n\r\n\r\n        if (this.state.lat === 0) {\r\n\r\n\r\n        }\r\n        else {\r\n\r\n            (async () => {\r\n\r\n                let fetchResult = await fetch(finalApiURL); // call API\r\n                let Result = await fetchResult.json(); // extract json\r\n\r\n\r\n                // console.log(Result.rows[\"0\"].elements[\"0\"].duration.text)\r\n\r\n                this.setState({ distance: Result.rows[\"0\"].elements[\"0\"].distance.text })\r\n\r\n                this._storeDistance()\r\n\r\n                this.setState({ duration: Result.rows[\"0\"].elements[\"0\"].duration.text })\r\n\r\n                this._storeDuration()\r\n\r\n                console.log(\"The Duration\" + this.state.duration)\r\n\r\n                console.log(\"The Distance\" + this.state.distance)\r\n\r\n                return Result.rows[\"0\"].elements[\"0\"].duration.text;\r\n\r\n            })();\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    _loadData = () => {\r\n\r\n        plat = this.props.navigation.state.params.platitude\r\n        plong = this.props.navigation.state.params.plongitude\r\n\r\n        daddress = this.state.address ? this.state.address : null\r\n        pstreet = this.props.navigation.state.params.pstreet\r\n\r\n        origin = { latitude: plat, longitude: plong };\r\n        this.setState({\r\n            spinner: false\r\n        }, () => {\r\n        })\r\n\r\n    }\r\n\r\n    _loadDatad = () => {\r\n\r\n        dlat = this.state.lat\r\n        dlong = this.state.lng\r\n\r\n        destination = { latitude: dlat, longitude: dlong };\r\n    }\r\n\r\n    _getPreciseDistance = () => {\r\n\r\n        const plat = this.props.navigation.state.params.platitude\r\n        const plong = this.props.navigation.state.params.plongitude\r\n        /*\r\n       \r\n\r\n        var pdis = getPreciseDistance(\r\n            { latitude: plat, longitude: plong },\r\n            { latitude: this.state.lat, longitude: this.state.lng }\r\n        );\r\n        alert(`Precise Distance\\n${pdis} Meter\\nor\\n${pdis / 1000} KM`);\r\n\r\n        */\r\n\r\n        if (this.state.lat === 0) {\r\n\r\n\r\n        }\r\n        else {\r\n            this.getDistanceOneToOne(plat, plong, this.state.lat, this.state.lng)\r\n        }\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n            <View style={container.container}>\r\n                <StatusBar barStyle=\"dark-content\" />\r\n                <Spinner\r\n                    visible={this.state.spinner}\r\n                    textContent={'Loading...'}\r\n                    overlayColor={'rgba(0, 0, 0, 0.8)'}\r\n                    textStyle={{ color: '#FFF' }}\r\n                    cancelable={false}\r\n\r\n                />\r\n\r\n                <MapView\r\n                    provider={MapView.PROVIDER_GOOGLE}\r\n                    style={{ flex: 1 }}\r\n                    initialRegion={{\r\n                        latitude: plat,\r\n                        longitude: plong,\r\n                        latitudeDelta: 0.0922,\r\n                        longitudeDelta: 0.0421\r\n                    }}>\r\n\r\n\r\n\r\n                    <Marker\r\n                        coordinate={{\r\n                            latitude: plat,\r\n                            longitude: plong\r\n                        }}\r\n                        title=\"Pick up\"\r\n                    >\r\n                        <Text style={{ backgroundColor: '#fff', fontWeight: 'bold', padding: 7 }}>Pick up</Text>\r\n                        <Image\r\n                            source={require(\"../../Image/pin2.png\")}\r\n                            style={{\r\n                                width: 50,\r\n                                height: 50,\r\n                                alignSelf: \"center\",\r\n                                resizeMode: \"contain\"\r\n                            }}\r\n                        />\r\n                    </Marker>\r\n                    <Marker\r\n                        coordinate={{\r\n                            latitude: dlat,\r\n                            longitude: dlong\r\n                        }}\r\n                        title=\"Drop Off\"\r\n                    >\r\n                        <Text style={{ backgroundColor: '#008000', fontWeight: 'bold', padding: 25, color: '#fff', borderRadius: 150, marginVertical: 10 }}>{this.state.duration}</Text>\r\n                        <Text style={{ backgroundColor: '#fff', fontWeight: 'bold', padding: 7, textAlign: \"center\" }}>Drop Off</Text>\r\n                        <Image\r\n                            source={require(\"../../Image/pin.png\")}\r\n                            style={{\r\n                                width: 50,\r\n                                height: 50,\r\n                                alignSelf: \"center\",\r\n                                resizeMode: \"contain\"\r\n                            }}\r\n                        />\r\n                    </Marker>\r\n\r\n\r\n\r\n\r\n                    <PolylineDirection\r\n                        origin={origin}\r\n                        destination={destination}\r\n                        apiKey=\"AIzaSyC7bi_TnkSCakWUI0pjTf6y_Ho3Pt2q4E0\"\r\n                        strokeWidth={4}\r\n                        strokeColor=\"#12bc00\"\r\n                    />\r\n\r\n                </MapView>\r\n\r\n\r\n\r\n\r\n\r\n                <GooglePlacesAutocomplete\r\n                    placeholder=\"Enter Drop Off Location\"\r\n                    placeholderTextColor=\"#333\"\r\n                    onPress={(data, details) => {\r\n                        console.log(data, details);\r\n\r\n                        var data = details;\r\n                        this.getAdds(data);\r\n                        moveToUserLocation: true\r\n                    }}\r\n                    query={{\r\n                        key: \"AIzaSyC7bi_TnkSCakWUI0pjTf6y_Ho3Pt2q4E0\",\r\n                        language: \"en\"\r\n                    }}\r\n                    textInputProps={{\r\n                        autoCapitalize: \"none\",\r\n                        autoCorrect: false\r\n                    }}\r\n                    fetchDetails={true}\r\n                    enablePoweredByContainer={false}\r\n                    styles={{\r\n                        container: {\r\n                            position: \"absolute\",\r\n                            top: Platform.select({ ios: 60, android: 40 }),\r\n                            width: \"100%\"\r\n                        },\r\n                        textInputContainer: {\r\n                            flex: 1,\r\n                            backgroundColor: \"transparent\",\r\n                            height: 50,\r\n                            marginHorizontal: 20,\r\n                            borderTopWidth: 0,\r\n                            borderBottomWidth: 0,\r\n\r\n                        },\r\n                        textInput: {\r\n                            height: 54,\r\n                            margin: 0,\r\n                            borderRadius: 0,\r\n                            paddingTop: 0,\r\n                            paddingBottom: 0,\r\n                            paddingLeft: 50,\r\n                            paddingRight: 20,\r\n                            marginTop: 0,\r\n                            marginLeft: 0,\r\n                            marginRight: 0,\r\n                            elevation: 5,\r\n                            shadowColor: \"#000\",\r\n                            shadowOpacity: 0.1,\r\n                            shadowOffset: { x: 0, y: 0 },\r\n                            shadowRadius: 15,\r\n                            borderWidth: 1,\r\n                            borderColor: \"#ddd\",\r\n                            fontSize: 18,\r\n\r\n                        },\r\n                        listView: {\r\n                            borderWidth: 1,\r\n                            borderColor: \"#ddd\",\r\n                            backgroundColor: \"#fff\",\r\n                            marginHorizontal: 20,\r\n                            elevation: 5,\r\n                            shadowColor: \"#000\",\r\n                            shadowOpacity: 0.1,\r\n                            shadowOffset: { x: 0, y: 0 },\r\n                            shadowRadius: 15,\r\n                            marginTop: 10\r\n                        },\r\n                        description: {\r\n                            fontSize: 16\r\n                        },\r\n                        row: {\r\n                            padding: 20,\r\n                            height: 65\r\n                        }\r\n                    }}\r\n                />\r\n\r\n                <Back onPress={() => this.props.navigation.goBack()} style={{ marginVertical: -90 }} />\r\n                <View style={style.subContainerView}>\r\n\r\n                    <Button\r\n                        onPress={() => this.props.navigation.navigate('BookingReqUp', { platitude: plat, plongitude: plong, dlatitude: dlat, dlongitude: dlong, deaddress: daddress, pestreet: pstreet })}\r\n                        onPress={() => this.processColor()}\r\n                        Text=\"Let's Go\"\r\n                        viewStyle={{ margin: 0, borderRadius: 0, width: width }}\r\n                    />\r\n                </View>\r\n\r\n            </View>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}