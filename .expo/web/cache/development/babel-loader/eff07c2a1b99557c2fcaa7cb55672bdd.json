{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kawab\\\\Desktop\\\\expresslog\\\\src\\\\Screen\\\\Recipient\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport container from \"../../Styles/Container/style\";\nvar width = Dimensions.get(\"window\").width;\nvar height = Dimensions.get(\"window\").height;\nimport Color from \"../../Config/Color\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport style from \"./style\";\nimport TextIcon from \"../../Component/TextIcon\";\nimport Button from \"../../Component/Button/index\";\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\nimport RNPickerSelect from 'react-native-picker-select';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { Picker } from '@react-native-picker/picker';\nimport Spinner from 'react-native-loading-spinner-overlay';\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n\n    _this.processColor = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.rfullname === \"\")) {\n                _context.next = 4;\n                break;\n              }\n\n              alert(\"Full Name cannot be empty\");\n              _context.next = 29;\n              break;\n\n            case 4:\n              if (!(_this.state.raddress === \"\")) {\n                _context.next = 8;\n                break;\n              }\n\n              alert(\"Address cannot be empty\");\n              _context.next = 29;\n              break;\n\n            case 8:\n              if (!(_this.state.rphone === \"\")) {\n                _context.next = 12;\n                break;\n              }\n\n              alert(\"Phone Cannot be empty\");\n              _context.next = 29;\n              break;\n\n            case 12:\n              if (!isNaN(_this.state.rphone)) {\n                _context.next = 16;\n                break;\n              }\n\n              alert(\"Phone Number must be numeric only\");\n              _context.next = 29;\n              break;\n\n            case 16:\n              if (!(_this.state.rcity === \"\")) {\n                _context.next = 20;\n                break;\n              }\n\n              alert(\"City cannot be empty\");\n              _context.next = 29;\n              break;\n\n            case 20:\n              _context.next = 22;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@storage_rFullname', _this.state.rfullname));\n\n            case 22:\n              _context.next = 24;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@storage_rAddress', _this.state.raddress));\n\n            case 24:\n              _context.next = 26;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@storage_rPhone', _this.state.rphone));\n\n            case 26:\n              _context.next = 28;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@storage_rCity', _this.state.rcity));\n\n            case 28:\n              _this.props.navigation.navigate(\"ItemDetails\", {\n                platitude: plats,\n                plongitude: plongs,\n                dlatitude: dlats,\n                dlongitude: dlongs,\n                deaddress: daddresss,\n                pestreet: pstreets,\n                Ride: ride\n              });\n\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var _plats = \"\";\n    var _plongs = \"\";\n    var _dlats = \"\";\n    var _dlongs = \"\";\n    var _pstreets = \"\";\n    var readdress = \"\";\n    _this.state = {\n      amount: \"\",\n      email: \"\",\n      sorders: []\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@addressDestination'));\n\n            case 3:\n              readdress = _context2.sent;\n              this.setState({\n                raddress: readdress\n              });\n              console.log(this.state.raddress);\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(\"Error saving Data\");\n\n            case 11:\n              fetch('https://expressalllogistics.com/logistics/states.php', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  mobile: this.state.tmobile,\n                  password: this.state.tpassword\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (responseJson) {\n                _this2.setState({\n                  spinner: false\n                }, function () {\n                  console.log(responseJson);\n\n                  _this2.setState({\n                    sorders: responseJson\n                  });\n                });\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[0, 8]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var myUsers = this.state.sorders.map(function (myValue, myIndex) {\n        return React.createElement(Picker.Item, {\n          label: myValue.delivery,\n          value: myValue.delivery,\n          key: myIndex,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 9\n          }\n        });\n      });\n      plats = this.props.navigation.state.params.platitude;\n      plongs = this.props.navigation.state.params.plongitude;\n      dlats = this.props.navigation.state.params.dlatitude;\n      dlongs = this.props.navigation.state.params.dlongitude;\n      pstreets = this.props.navigation.state.params.pestreet;\n      ride = this.props.navigation.state.params.Ride;\n      return React.createElement(View, {\n        style: [container.container],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }), React.createElement(Spinner, {\n        visible: this.state.spinner,\n        textContent: 'Loading...',\n        overlayColor: 'rgba(0, 0, 0, 0.8)',\n        textStyle: {\n          color: '#FFF'\n        },\n        cancelable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          width: width,\n          backgroundColor: '#000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          marginHorizontal: 15,\n          marginTop: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.props.navigation.goBack();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-arrow-back\",\n        size: 25,\n        style: [{\n          alignSelf: \"flex-start\",\n          color: \"#fff\"\n        }, this.props.iconStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.75,\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 26,\n          fontFamily: \"uber-b\",\n          color: Color.white,\n          marginTop: 10,\n          marginBottom: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      }, \"Create Shipment (2/3)\"))))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }\n      }), React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.centralize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.centralize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }\n      }, \"Recipient Details\")), React.createElement(View, {\n        style: styles.regForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        label: \"Enter Full Name\",\n        style: styles.textinput,\n        placeholder: \"Enter Full Name\",\n        underlineColorAndroid: 'transparent',\n        onChangeText: function onChangeText(val) {\n          return _this3.setState({\n            rfullname: val\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        label: \"Enter Pickup Address\",\n        style: styles.textinput,\n        placeholder: \"Enter Destination Address\",\n        value: this.state.raddress,\n        underlineColorAndroid: 'transparent',\n        onChangeText: function onChangeText(val) {\n          return _this3.setState({\n            raddress: val\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        keyboardType: \"numeric\",\n        label: \"Enter Phone No\",\n        style: styles.textinput,\n        placeholder: \"Enter Phone No\",\n        underlineColorAndroid: 'transparent',\n        onChangeText: function onChangeText(val) {\n          return _this3.setState({\n            rphone: val\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: {\n          borderWidth: 1,\n          borderColor: 'black',\n          borderRadius: 4\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }\n      }, React.createElement(Picker, {\n        selectedValue: this.state.selectedValue,\n        onValueChange: function onValueChange(value) {\n          return _this3.setState({\n            selectedValue: value,\n            rcity: value\n          });\n        },\n        itemStyle: {\n          backgroundColor: \"grey\",\n          color: \"black\",\n          fontFamily: \"uber\",\n          fontSize: 17\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Select Destination City\",\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }\n      }), myUsers)))), React.createElement(Button, {\n        Text: \"Next\",\n        viewStyle: {\n          backgroundColor: Color.black,\n          color: '#ffffff',\n          borderRadius: 0,\n          borderColor: Color.white,\n          marginTop: 10,\n          marginBottom: 0,\n          marginHorizontal: 0\n        },\n        textStyle: {\n          color: Color.steel\n        },\n        onPress: function onPress() {\n          return _this3.processColor();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport { index as default };\nvar styles = StyleSheet.create({\n  regForm: {\n    padding: 20\n  },\n  textinput: {\n    marginBottom: 30,\n    color: '#000000',\n    borderColor: '#000000',\n    borderWidth: 1,\n    padding: 10,\n    fontSize: 12\n  },\n  centralize: {\n    alignItems: 'center',\n    fontWeight: 'bold',\n    fontSize: 15,\n    marginVertical: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/kawab/Desktop/expresslog/src/Screen/Recipient/index.js"],"names":["React","Component","container","width","Dimensions","get","height","Color","Icon","style","TextIcon","Button","RadioForm","RadioButton","RadioButtonInput","RadioButtonLabel","RNPickerSelect","AsyncStorage","Picker","Spinner","index","props","processColor","state","rfullname","alert","raddress","rphone","isNaN","rcity","setItem","navigation","navigate","platitude","plats","plongitude","plongs","dlatitude","dlats","dlongitude","dlongs","deaddress","daddresss","pestreet","pstreets","Ride","ride","readdress","amount","email","sorders","getItem","setState","console","log","fetch","method","headers","body","JSON","stringify","mobile","tmobile","password","tpassword","then","response","json","responseJson","spinner","myUsers","map","myValue","myIndex","delivery","params","color","backgroundColor","marginHorizontal","marginTop","goBack","alignSelf","iconStyle","flexDirection","flex","justifyContent","fontSize","fontFamily","white","marginBottom","styles","centralize","regForm","textinput","val","borderWidth","borderColor","borderRadius","selectedValue","value","black","steel","StyleSheet","create","padding","alignItems","fontWeight","marginVertical"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  ImageBackground,\n  Dimensions,\n  Image,\n  TextInput,\n  KeyboardAvoidingView,\n  TouchableOpacity,\n  ScrollView,\n  StatusBar,\n  StyleSheet\n} from \"react-native\";\nimport container from \"../../Styles/Container/style\";\nlet width = Dimensions.get(\"window\").width;\nlet height = Dimensions.get(\"window\").height;\nimport Color from \"../../Config/Color\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport style from \"./style\";\nimport TextIcon from \"../../Component/TextIcon\";\nimport Button from \"../../Component/Button/index\";\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\nimport RNPickerSelect from 'react-native-picker-select';\nimport AsyncStorage from '@react-native-community/async-storage'\nimport { Picker } from '@react-native-picker/picker';\nimport Spinner from 'react-native-loading-spinner-overlay';\n\n\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props)\n\n    var plats = \"\"\n    var plongs = \"\"\n    var dlats = \"\"\n    var dlongs = \"\"\n\n    var pstreets = \"\"\n    var readdress = \"\"\n\n    this.state = {\n      amount: \"\",\n      email: \"\",\n      sorders: []\n\n\n\n    }\n\n\n\n  }\n\n\n  async componentDidMount() {\n\n    try {\n\n      readdress = await AsyncStorage.getItem('@addressDestination')\n\n\n\n\n      this.setState({ raddress: readdress })\n\n      console.log(this.state.raddress)\n    }\n    catch (error) {\n      // Error saving data\n      console.log(\"Error saving Data\")\n    }\n\n\n\n    fetch('https://expressalllogistics.com/logistics/states.php', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n\n        mobile: this.state.tmobile,\n        password: this.state.tpassword\n\n      })\n\n    }).then((response) => response.json())\n      .then((responseJson) => {\n\n\n        this.setState({\n          spinner: false\n        }, () => {\n\n\n          console.log(responseJson)\n          this.setState({ sorders: responseJson })\n\n        })\n\n\n\n\n      })\n\n\n  }\n\n\n  processColor = async () => {\n\n    if (this.state.rfullname === \"\") {\n      alert(\"Full Name cannot be empty\")\n    }\n    else if (this.state.raddress === \"\") {\n      alert(\"Address cannot be empty\")\n    }\n    else if (this.state.rphone === \"\") {\n      alert(\"Phone Cannot be empty\")\n    }\n\n    else if (isNaN(this.state.rphone)) {\n      // Its not a number\n      alert(\"Phone Number must be numeric only\")\n    }\n    else if (this.state.rcity === \"\") {\n      alert(\"City cannot be empty\")\n    }\n    else {\n      await AsyncStorage.setItem('@storage_rFullname', this.state.rfullname)\n      await AsyncStorage.setItem('@storage_rAddress', this.state.raddress)\n      await AsyncStorage.setItem('@storage_rPhone', this.state.rphone)\n      await AsyncStorage.setItem('@storage_rCity', this.state.rcity)\n\n      this.props.navigation.navigate(\"ItemDetails\", { platitude: plats, plongitude: plongs, dlatitude: dlats, dlongitude: dlongs, deaddress: daddresss, pestreet: pstreets, Ride: ride })\n    }\n  }\n\n\n\n\n\n\n  /*\n    getData = async () => {\n      try {\n        const value = await AsyncStorage.getItem('@storage_Key')\n        if (value !== null) {\n          // value previously stored\n          alert(value)\n        }\n      } catch (e) {\n        // error reading value\n        alert(\"Could not read value\")\n      }\n    }\n  \n  */\n\n\n\n  render() {\n\n    let myUsers = this.state.sorders.map((myValue, myIndex) => {\n      return (\n        <Picker.Item label={myValue.delivery} value={myValue.delivery} key={myIndex} />\n      )\n    });\n\n\n    plats = this.props.navigation.state.params.platitude\n    plongs = this.props.navigation.state.params.plongitude\n    dlats = this.props.navigation.state.params.dlatitude\n    dlongs = this.props.navigation.state.params.dlongitude\n\n    pstreets = this.props.navigation.state.params.pestreet\n    ride = this.props.navigation.state.params.Ride\n    //prices = this.props.navigation.state.params.Prices\n\n\n\n\n    return (\n      <View style={[container.container]}>\n        <StatusBar\n          barStyle=\"light-content\"\n        />\n        <Spinner\n          visible={this.state.spinner}\n          textContent={'Loading...'}\n          overlayColor={'rgba(0, 0, 0, 0.8)'}\n          textStyle={{ color: '#FFF' }}\n          cancelable={false}\n\n        />\n        <View style={{ width: width, backgroundColor: '#000' }}>\n          <View\n            style={{\n              marginHorizontal: 15,\n              marginTop: 40,\n            }}\n          >\n            <TouchableOpacity\n              onPress={() => this.props.navigation.goBack()}\n            >\n              <Icon\n                name=\"ios-arrow-back\"\n                size={25}\n                style={[\n                  {\n                    alignSelf: \"flex-start\",\n                    color: \"#fff\"\n                    //marginTop:40\n                  },\n                  this.props.iconStyle\n                ]}\n              />\n            </TouchableOpacity>\n            <View style={{ flexDirection: \"row\", }}>\n              <View style={{ flex: 0.75, justifyContent: \"center\" }}>\n                <Text\n                  style={{\n                    fontSize: 26,\n                    fontFamily: \"uber-b\",\n                    color: Color.white,\n                    marginTop: 10,\n                    marginBottom: 25\n                  }}\n                >\n                  Create Shipment (2/3)\n                  </Text>\n              </View>\n              {/* <View style={[style.imageProfileView, { flex: 0.25 }]}>\n                  <Image\n                    source={require(\"../../Image/Pic.png\")}\n                    style={style.imageProfile}\n                  />\n                </View> */}\n            </View>\n          </View>\n        </View>\n        <View />\n\n\n        <ScrollView>\n          <View style={styles.centralize}>\n            <Text style={styles.centralize}>Recipient Details</Text></View>\n          <View style={styles.regForm}>\n\n            <TextInput label=\"Enter Full Name\" style={styles.textinput} placeholder=\"Enter Full Name\" underlineColorAndroid={'transparent'} onChangeText={(val) => this.setState({ rfullname: val })} />\n\n            <TextInput label=\"Enter Pickup Address\" style={styles.textinput} placeholder=\"Enter Destination Address\" value={this.state.raddress} underlineColorAndroid={'transparent'} onChangeText={(val) => this.setState({ raddress: val })} />\n\n            <TextInput keyboardType=\"numeric\" label=\"Enter Phone No\" style={styles.textinput} placeholder=\"Enter Phone No\" underlineColorAndroid={'transparent'} onChangeText={(val) => this.setState({ rphone: val })} />\n\n            <View style={{ borderWidth: 1, borderColor: 'black', borderRadius: 4 }}>\n              <Picker selectedValue={this.state.selectedValue} onValueChange={(value) => this.setState({ selectedValue: value, rcity: value })} itemStyle={{ backgroundColor: \"grey\", color: \"black\", fontFamily: \"uber\", fontSize: 17 }}>\n                <Picker.Item label=\"Select Destination City\" value=\"\" />\n                {myUsers}\n              </Picker>\n            </View>\n\n\n\n          </View>\n        </ScrollView>\n        <Button\n          Text=\"Next\"\n          viewStyle={{\n            backgroundColor: Color.black,\n            color: '#ffffff',\n            borderRadius: 0,\n            borderColor: Color.white,\n            marginTop: 10,\n            marginBottom: 0,\n            marginHorizontal: 0\n          }}\n          textStyle={{ color: Color.steel }}\n          onPress={() => this.processColor()}\n\n        />\n\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  regForm: {\n    padding: 20\n  },\n  textinput: {\n\n\n    marginBottom: 30,\n    color: '#000000',\n    borderColor: '#000000',\n    borderWidth: 1,\n    padding: 10,\n    fontSize: 12\n  },\n  centralize: {\n    alignItems: 'center',\n    fontWeight: 'bold',\n    fontSize: 15,\n    marginVertical: 10\n\n  }\n});\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}