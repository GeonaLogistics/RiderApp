{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kawab\\\\Desktop\\\\expresslog\\\\src\\\\Component\\\\Model\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-modal\";\n\nvar ModalTester = function (_Component) {\n  _inherits(ModalTester, _Component);\n\n  var _super = _createSuper(ModalTester);\n\n  function ModalTester() {\n    var _this;\n\n    _classCallCheck(this, ModalTester);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isModalVisible: false\n    };\n\n    _this._toggleModal = function () {\n      return _this.setState({\n        isModalVisible: !_this.state.isModalVisible\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ModalTester, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          marginTop: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this._toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, \"Show Modal\")), React.createElement(Modal, {\n        isVisible: this.state.isModalVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, \"Hello!\"), React.createElement(TouchableOpacity, {\n        onPress: this._toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }, \"Hide me!\")))));\n    }\n  }]);\n\n  return ModalTester;\n}(Component);\n\nexport { ModalTester as default };","map":{"version":3,"sources":["C:/Users/kawab/Desktop/expresslog/src/Component/Model/index.js"],"names":["React","Component","Modal","ModalTester","state","isModalVisible","_toggleModal","setState","flex","marginTop","backgroundColor"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEqBC,W;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,cAAc,EAAE;AADV,K;;UAIRC,Y,GAAe;AAAA,aACb,MAAKC,QAAL,CAAc;AAAEF,QAAAA,cAAc,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAA9B,OAAd,CADa;AAAA,K;;;;;;;6BAGN;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEG,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,SAAS,EAAE;AAAtB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKH,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAIE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEK,UAAAA,eAAe,EAAC;AAAlB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKJ,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAFF,CADF,CAJF,CADF;AAeD;;;;EAxBsCL,S;;SAApBE,W","sourcesContent":["import React, { Component } from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\nimport Modal from \"react-native-modal\";\n\nexport default class ModalTester extends Component {\n  state = {\n    isModalVisible: false\n  };\n\n  _toggleModal = () =>\n    this.setState({ isModalVisible: !this.state.isModalVisible });\n\n  render() {\n    return (\n      <View style={{ flex: 1, marginTop: 60 }}>\n        <TouchableOpacity onPress={this._toggleModal}>\n          <Text>Show Modal</Text>\n        </TouchableOpacity>\n        <Modal isVisible={this.state.isModalVisible}>\n          <View style={{ backgroundColor:'#fff'}}>\n            <Text>Hello!</Text>\n            <TouchableOpacity onPress={this._toggleModal}>\n              <Text>Hide me!</Text>\n            </TouchableOpacity>\n          </View>\n        </Modal>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}