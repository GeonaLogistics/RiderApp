{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kawab\\\\Desktop\\\\expresslog\\\\src\\\\Screen\\\\OTP\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport container from \"../../Styles/Container/style\";\nimport CodeInput from \"react-native-confirmation-code-input\";\nvar width = Dimensions.get(\"window\").width;\nvar height = Dimensions.get(\"window\").height;\nimport Color from \"../../Config/Color\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Button from \"../../Component/Button/index\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Spinner from 'react-native-loading-spinner-overlay';\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n\n    _this._getCode = function _callee() {\n      var authCodes, tmobile;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@setActivation'));\n\n            case 3:\n              authCodes = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@setauthmobile'));\n\n            case 6:\n              tmobile = _context.sent;\n\n              _this.setState({\n                authCode: authCodes,\n                mobilePhone: tmobile\n              });\n\n              console.log(_this.state.authCode, _this.state.mobilePhone);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"Error saving Data\");\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    };\n\n    _this.state = {\n      auth: \"\",\n      authCode: \"\",\n      mobilePhone: \"\",\n      spinner: false\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this._getCode();\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_onFulfill\",\n    value: function _onFulfill() {\n      var _this2 = this;\n\n      if (this.state.auth === \"\") {\n        alert(\"Kindly enter an authorization code\");\n      } else if (this.state.auth === this.state.authCode) {\n        this.setState({\n          spinner: true\n        }, function () {\n          fetch('https://expressalllogistics.com/logistics/g.php', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              auth: _this2.state.authCode,\n              emobile: _this2.state.mobilePhone\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (responseJson) {\n            _this2.setState({\n              spinner: false\n            }, function () {\n              var user_id = responseJson.Tripcodes;\n\n              if (user_id === 4) {\n                alert(\"Account Verified.... Click on Sign in tab to Login\");\n\n                _this2.props.navigation.navigate(\"SignUp\");\n              } else {\n                alert(\"An Error Occured\");\n              }\n            });\n          });\n        });\n      } else {\n        alert(\"Invalid Authorization Code\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: [container.container],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }\n      }, React.createElement(Spinner, {\n        visible: this.state.spinner,\n        textContent: 'Verifying OTP',\n        overlayColor: 'rgba(0, 0, 0, 0.8)',\n        textStyle: {\n          color: '#FFF'\n        },\n        cancelable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          width: width,\n          height: height / 3.5,\n          backgroundColor: Color.black\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../../Image/city-building.png\"),\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          marginHorizontal: 15,\n          marginTop: 40,\n          marginBottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate(\"SignUp\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-arrow-back\",\n        size: 30,\n        style: [{\n          alignSelf: \"flex-start\",\n          color: \"#fff\"\n        }, this.props.iconStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }\n      })), React.createElement(Text, {\n        style: {\n          fontSize: 28,\n          fontFamily: \"uber-b\",\n          color: Color.white,\n          marginVertical: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }, \"Mobile Verification\"), React.createElement(Text, {\n        style: {\n          fontSize: 14,\n          fontFamily: \"uber-l\",\n          color: Color.whiteSmoke,\n          marginVertical: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      }, \"Enter your OTP code\")))), React.createElement(View, {\n        style: {\n          marginHorizontal: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          marginVertical: 50,\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }, React.createElement(CodeInput, {\n        ref: \"codeInputRef1\",\n        className: \"border-b\",\n        keyboardType: \"number-pad\",\n        space: 20,\n        size: 50,\n        cellBorderWidth: 5,\n        codeLength: 4,\n        codeInputStyle: {\n          fontFamily: \"uber-b\",\n          fontSize: 28\n        },\n        inputPosition: \"left\",\n        activeColor: \"black\",\n        inactiveColor: \"#A0A0A0\",\n        onFulfill: function onFulfill(val) {\n          return _this3.setState({\n            auth: val\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: {\n          marginHorizontal: 38,\n          marginVertical: 75\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          return _this3._onFulfill();\n        },\n        Text: \"Verify\",\n        viewStyle: {\n          backgroundColor: Color.black\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport { index as default };","map":{"version":3,"sources":["C:/Users/kawab/Desktop/expresslog/src/Screen/OTP/index.js"],"names":["React","Component","container","CodeInput","width","Dimensions","get","height","Color","Icon","Button","AsyncStorage","Spinner","index","props","_getCode","getItem","authCodes","tmobile","setState","authCode","mobilePhone","console","log","state","auth","spinner","alert","fetch","method","headers","body","JSON","stringify","emobile","then","response","json","responseJson","user_id","Tripcodes","navigation","navigate","color","flex","backgroundColor","black","require","marginHorizontal","marginTop","marginBottom","alignSelf","iconStyle","fontSize","fontFamily","white","marginVertical","whiteSmoke","alignItems","justifyContent","val","_onFulfill"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Text,\n  View,\n  ImageBackground,\n  Image,\n  Dimensions,\n  TouchableOpacity\n} from \"react-native\";\nimport container from \"../../Styles/Container/style\";\nimport CodeInput from \"react-native-confirmation-code-input\";\nlet width = Dimensions.get(\"window\").width;\nlet height = Dimensions.get(\"window\").height;\nimport Color from \"../../Config/Color\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport Button from \"../../Component/Button/index\";\nimport AsyncStorage from '@react-native-community/async-storage'\nimport Spinner from 'react-native-loading-spinner-overlay';\n\nexport default class index extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      auth: \"\",\n      authCode: \"\",\n      mobilePhone: \"\",\n      spinner: false\n\n    }\n  }\n\n  async componentDidMount() {\n    this._getCode();\n  }\n\n\n  _onFulfill() {\n\n    if (this.state.auth === \"\") {\n      alert(\"Kindly enter an authorization code\")\n    }\n    else if (this.state.auth === this.state.authCode) {\n\n\n      //connection starts\n\n\n\n      this.setState({\n        spinner: true\n      }, () => {\n\n\n\n        fetch('https://expressalllogistics.com/logistics/g.php', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n\n            auth: this.state.authCode,\n            emobile: this.state.mobilePhone\n\n          })\n\n        }).then((response) => response.json())\n          .then((responseJson) => {\n\n            this.setState({\n              spinner: false\n\n\n            }, () => {\n\n              var user_id = responseJson.Tripcodes;\n\n              //var success = responseJson.Success;\n\n\n\n\n              // If server response message same as Data Matched\n              if (user_id === 4) {\n\n\n\n                //connection end\n                alert(\"Account Verified.... Click on Sign in tab to Login\")\n\n                this.props.navigation.navigate(\"SignUp\")\n\n              }\n              else {\n                alert(\"An Error Occured\")\n              }\n\n\n            })\n          })\n\n\n\n\n      })\n\n\n\n    }\n    else {\n      alert(\"Invalid Authorization Code\")\n    }\n\n\n  }\n\n  _getCode = async () => {\n\n    try {\n\n      var authCodes = await AsyncStorage.getItem('@setActivation')\n      var tmobile = await AsyncStorage.getItem('@setauthmobile')\n\n\n\n\n      this.setState({ authCode: authCodes, mobilePhone: tmobile })\n\n      console.log(this.state.authCode, this.state.mobilePhone)\n    }\n    catch (error) {\n      // Error saving data\n      console.log(\"Error saving Data\")\n    }\n  }\n\n\n  render() {\n    return (\n      <View style={[container.container]}>\n        <Spinner\n          visible={this.state.spinner}\n          textContent={'Verifying OTP'}\n          overlayColor={'rgba(0, 0, 0, 0.8)'}\n          textStyle={{ color: '#FFF' }}\n          cancelable={false}\n\n        />\n        <View style={{ flex: 1 }}>\n          <View\n            style={{\n              width: width,\n              height: height / 3.5,\n              backgroundColor: Color.black\n            }}\n          >\n            <ImageBackground\n              source={require(\"../../Image/city-building.png\")}\n              style={{ flex: 1 }}\n            >\n              <View\n                style={{\n                  marginHorizontal: 15,\n                  marginTop: 40,\n                  marginBottom: 20\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => this.props.navigation.navigate(\"SignUp\")}\n                >\n                  <Icon\n                    name=\"ios-arrow-back\"\n                    size={30}\n                    style={[\n                      {\n                        alignSelf: \"flex-start\",\n                        color: \"#fff\"\n                        //marginTop:40\n                      },\n                      this.props.iconStyle\n                    ]}\n                  />\n                </TouchableOpacity>\n                <Text\n                  style={{\n                    fontSize: 28,\n                    fontFamily: \"uber-b\",\n                    color: Color.white,\n                    marginVertical: 10\n                  }}\n                >\n                  Mobile Verification\n                </Text>\n                <Text\n                  style={{\n                    fontSize: 14,\n                    fontFamily: \"uber-l\",\n                    color: Color.whiteSmoke,\n                    marginVertical: 10\n                  }}\n                >\n                  Enter your OTP code\n                </Text>\n              </View>\n            </ImageBackground>\n          </View>\n          <View\n            style={{\n              marginHorizontal: 20,\n              //flex: 1,\n              //justifyContent: \"flex-end\",\n              //alignItems: \"center\",\n              //marginVertical: 50\n            }}\n          >\n            <View\n              style={{\n                alignItems: \"center\",\n                marginVertical: 50,\n                justifyContent: \"center\",\n                //  flex: 0.5\n              }}\n            >\n              <CodeInput\n                ref=\"codeInputRef1\"\n                className={\"border-b\"}\n                keyboardType=\"number-pad\"\n                space={20}\n                size={50}\n                cellBorderWidth={5}\n                codeLength={4}\n                codeInputStyle={{\n                  fontFamily: \"uber-b\",\n                  fontSize: 28\n                }}\n                inputPosition=\"left\"\n                activeColor=\"black\"\n                inactiveColor=\"#A0A0A0\"\n                onFulfill={(val) => this.setState({ auth: val })}\n              />\n            </View>\n            <View style={{ marginHorizontal: 38, marginVertical: 75 }}>\n              <Button\n                onPress={() => this._onFulfill()}\n                Text=\"Verify\"\n                viewStyle={{ backgroundColor: Color.black, }}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}